//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

#pragma warning disable 108 // Disable "CS0108 '{derivedDto}.ToJson()' hides inherited member '{dtoBase}.ToJson()'. Use the new keyword if hiding was intended."
#pragma warning disable 114 // Disable "CS0114 '{derivedDto}.RaisePropertyChanged(String)' hides inherited member 'dtoBase.RaisePropertyChanged(String)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword."
#pragma warning disable 472 // Disable "CS0472 The result of the expression is always 'false' since a value of type 'Int32' is never equal to 'null' of type 'Int32?'
#pragma warning disable 612 // Disable "CS0612 '...' is obsolete"
#pragma warning disable 1573 // Disable "CS1573 Parameter '...' has no matching param tag in the XML comment for ...
#pragma warning disable 1591 // Disable "CS1591 Missing XML comment for publicly visible type or member ..."
#pragma warning disable 8073 // Disable "CS8073 The result of the expression is always 'false' since a value of type 'T' is never equal to 'null' of type 'T?'"
#pragma warning disable 3016 // Disable "CS3016 Arrays as attribute arguments is not CLS-compliant"
#pragma warning disable 8603 // Disable "CS8603 Possible null reference return"

namespace BimAndCo.Alchemist.Web.Api.Clients.CSharp.Contracts
{
    using System = global::System;

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial interface ITestClient
    {
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<string> DbSeedAsync(System.Guid? qsUserId, System.Guid? qsRepositoryId, int? numberOfParameters, int? numberOfEntities, int? commitEvery, int? streamEvery, string apiVersion);

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<string> DbSeedAsync(System.Guid? qsUserId, System.Guid? qsRepositoryId, int? numberOfParameters, int? numberOfEntities, int? commitEvery, int? streamEvery, string apiVersion, System.Threading.CancellationToken cancellationToken);

        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task SetupAsync(string apiVersion);

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task SetupAsync(string apiVersion, System.Threading.CancellationToken cancellationToken);

        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<TestSetupInfo> InfoAsync(string apiVersion);

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<TestSetupInfo> InfoAsync(string apiVersion, System.Threading.CancellationToken cancellationToken);

        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<bool> IsSeedingAsync(System.Guid repositoryId, string apiVersion);

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<bool> IsSeedingAsync(System.Guid repositoryId, string apiVersion, System.Threading.CancellationToken cancellationToken);

    }

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial interface IUserClient
    {
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<ResponseWithGuidDto> PostAsync(string apiVersion, PostUserRequestDto userDto);

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<ResponseWithGuidDto> PostAsync(string apiVersion, PostUserRequestDto userDto, System.Threading.CancellationToken cancellationToken);

        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<UserDto>> ListAsync(string apiVersion);

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<UserDto>> ListAsync(string apiVersion, System.Threading.CancellationToken cancellationToken);

        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task PutAsync(string apiVersion, UserDto userDto);

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task PutAsync(string apiVersion, UserDto userDto, System.Threading.CancellationToken cancellationToken);

        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<ResponseWithGuidDto> GetAsync(System.Guid id, string apiVersion);

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<ResponseWithGuidDto> GetAsync(System.Guid id, string apiVersion, System.Threading.CancellationToken cancellationToken);

        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task DeleteAsync(System.Guid id, string apiVersion, string guid);

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task DeleteAsync(System.Guid id, string apiVersion, string guid, System.Threading.CancellationToken cancellationToken);

        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<FileResponse> RegisterAsync(string apiVersion, UserRegisterRequestDto requestDto);

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<FileResponse> RegisterAsync(string apiVersion, UserRegisterRequestDto requestDto, System.Threading.CancellationToken cancellationToken);

        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task LoginAsync(string apiVersion, UserLoginRequestDto userLoginRequestDto);

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task LoginAsync(string apiVersion, UserLoginRequestDto userLoginRequestDto, System.Threading.CancellationToken cancellationToken);

        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task LogoutAsync(string apiVersion);

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task LogoutAsync(string apiVersion, System.Threading.CancellationToken cancellationToken);

        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<MeResponseDto> MeAsync(string apiVersion);

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<MeResponseDto> MeAsync(string apiVersion, System.Threading.CancellationToken cancellationToken);

    }

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial interface IUserRepositoryClient
    {
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<ResponseDto> PostAsync(string apiVersion, string spaceId, UserRepositoryPostDto userRepositoryPostDto);

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<ResponseDto> PostAsync(string apiVersion, string spaceId, UserRepositoryPostDto userRepositoryPostDto, System.Threading.CancellationToken cancellationToken);

        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<UserRepositoryListResponseDto> ListAsync(System.Guid userId, string apiVersion, string spaceId);

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<UserRepositoryListResponseDto> ListAsync(System.Guid userId, string apiVersion, string spaceId, System.Threading.CancellationToken cancellationToken);

        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<bool> DeleteAsync(string apiVersion, string spaceId, UserRepositoryDeleteDto userRepositoryDeleteDto);

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<bool> DeleteAsync(string apiVersion, string spaceId, UserRepositoryDeleteDto userRepositoryDeleteDto, System.Threading.CancellationToken cancellationToken);

    }

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial interface ISpaceClient
    {
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<PostSpaceResponseDto> PostAsync(string apiVersion, PostSpaceRequestDto request);

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<PostSpaceResponseDto> PostAsync(string apiVersion, PostSpaceRequestDto request, System.Threading.CancellationToken cancellationToken);

        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<ListSpacesResponseDto> ListAsync(ListSpacesRequestDto userRequest, string apiVersion);

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<ListSpacesResponseDto> ListAsync(ListSpacesRequestDto userRequest, string apiVersion, System.Threading.CancellationToken cancellationToken);

        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<DeleteSpaceResponseDto> DeleteAsync(System.Guid id, string apiVersion);

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<DeleteSpaceResponseDto> DeleteAsync(System.Guid id, string apiVersion, System.Threading.CancellationToken cancellationToken);

    }

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial interface ISpaceUserClient
    {
        /// <summary>
        /// Associate a User to a Space
        /// </summary>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<PostSpaceResponseDto> PostAsync(string apiVersion, string spaceId, PostSpaceUserRequestDto request);

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Associate a User to a Space
        /// </summary>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<PostSpaceResponseDto> PostAsync(string apiVersion, string spaceId, PostSpaceUserRequestDto request, System.Threading.CancellationToken cancellationToken);

        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<DeleteSpaceUserResponseDto> DeleteAsync(System.Guid spaceId, System.Guid userId, string apiVersion);

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<DeleteSpaceUserResponseDto> DeleteAsync(System.Guid spaceId, System.Guid userId, string apiVersion, System.Threading.CancellationToken cancellationToken);

        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<ListSpaceUsersResponseDto> ListAsync(System.Guid spaceId, string apiVersion);

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<ListSpaceUsersResponseDto> ListAsync(System.Guid spaceId, string apiVersion, System.Threading.CancellationToken cancellationToken);

    }

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial interface IRepositoryClient
    {
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<PostRepositoryResponseDto> PostAsync(string apiVersion, string spaceId, PostRepositoryRequestDto request);

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<PostRepositoryResponseDto> PostAsync(string apiVersion, string spaceId, PostRepositoryRequestDto request, System.Threading.CancellationToken cancellationToken);

        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<ListRepositoryResponseDto> ListAsync(System.Guid userId, string apiVersion, string spaceId);

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<ListRepositoryResponseDto> ListAsync(System.Guid userId, string apiVersion, string spaceId, System.Threading.CancellationToken cancellationToken);

        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<PatchRepositoryResponseWithGuidDtoDto> RenameAsync(string apiVersion, string spaceId, PatchRepositoryRequestDto putRequest);

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<PatchRepositoryResponseWithGuidDtoDto> RenameAsync(string apiVersion, string spaceId, PatchRepositoryRequestDto putRequest, System.Threading.CancellationToken cancellationToken);

        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<GetRepositoryResponseDto> GetAsync(System.Guid repositoryId, System.Guid userId, string apiVersion, string spaceId);

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<GetRepositoryResponseDto> GetAsync(System.Guid repositoryId, System.Guid userId, string apiVersion, string spaceId, System.Threading.CancellationToken cancellationToken);

        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<DeleteRepositoryResponseDto> DeleteAsync(System.Guid id, string apiVersion, string spaceId, System.Guid userId);

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<DeleteRepositoryResponseDto> DeleteAsync(System.Guid id, string apiVersion, string spaceId, System.Guid userId, System.Threading.CancellationToken cancellationToken);

        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<StartAllTableAutomationsResponseDto> StartAllAutomationsAsync(System.Guid spaceId, System.Guid repositoryId, string apiVersion);

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<StartAllTableAutomationsResponseDto> StartAllAutomationsAsync(System.Guid spaceId, System.Guid repositoryId, string apiVersion, System.Threading.CancellationToken cancellationToken);

        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<GetAllTableAutomationsStatusResponseDto> GetAllAutomationsStatusesAsync(System.Guid spaceId, System.Guid repositoryId, string apiVersion);

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<GetAllTableAutomationsStatusResponseDto> GetAllAutomationsStatusesAsync(System.Guid spaceId, System.Guid repositoryId, string apiVersion, System.Threading.CancellationToken cancellationToken);

        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<ParameterStreamingResponseDto>> GetTableParametersAsync(System.Guid spaceId, System.Guid repositoryId, System.Guid? repositoryViewId, string apiVersion);

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<ParameterStreamingResponseDto>> GetTableParametersAsync(System.Guid spaceId, System.Guid repositoryId, System.Guid? repositoryViewId, string apiVersion, System.Threading.CancellationToken cancellationToken);

    }

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial interface IRepositoryEntitiesClient
    {
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<RepositoryEntitiesNameAutoCompletionSearchResponse> AutocompleteEntityNamesAsync(System.Guid id, string search, string apiVersion, string spaceId);

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<RepositoryEntitiesNameAutoCompletionSearchResponse> AutocompleteEntityNamesAsync(System.Guid id, string search, string apiVersion, string spaceId, System.Threading.CancellationToken cancellationToken);

    }

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial interface IRepositoryViewClient
    {
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<DeleteRepositoryViewResponseDto> DeleteAsync(System.Guid userId, string apiVersion, string spaceId, string repositoryId, string repositoryViewId, string api_version, DeleteRepositoryViewRequestDto request);

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<DeleteRepositoryViewResponseDto> DeleteAsync(System.Guid userId, string apiVersion, string spaceId, string repositoryId, string repositoryViewId, string api_version, DeleteRepositoryViewRequestDto request, System.Threading.CancellationToken cancellationToken);

        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<GetRepositoryViewResponseDto> GetAsync(System.Guid userId, System.Guid repositoryId, System.Guid repositoryViewId, string apiVersion, string spaceId, string api_version);

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<GetRepositoryViewResponseDto> GetAsync(System.Guid userId, System.Guid repositoryId, System.Guid repositoryViewId, string apiVersion, string spaceId, string api_version, System.Threading.CancellationToken cancellationToken);

        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<PatchRepositoryViewResponseDto> PatchAsync(System.Guid userId, string apiVersion, string spaceId, string repositoryId, string repositoryViewId, string api_version, PatchRepositoryViewRequestDto request);

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<PatchRepositoryViewResponseDto> PatchAsync(System.Guid userId, string apiVersion, string spaceId, string repositoryId, string repositoryViewId, string api_version, PatchRepositoryViewRequestDto request, System.Threading.CancellationToken cancellationToken);

        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<ListRepositoryViewResponseDto> ListAsync(System.Guid userId, System.Guid repositoryId, string apiVersion, string spaceId, string api_version);

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<ListRepositoryViewResponseDto> ListAsync(System.Guid userId, System.Guid repositoryId, string apiVersion, string spaceId, string api_version, System.Threading.CancellationToken cancellationToken);

        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<PostRepositoryViewResponseWithGuidDto> PostAsync(System.Guid userId, System.Guid repositoryId, string apiVersion, string spaceId, string api_version, PostRepositoryViewRequestDto request);

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<PostRepositoryViewResponseWithGuidDto> PostAsync(System.Guid userId, System.Guid repositoryId, string apiVersion, string spaceId, string api_version, PostRepositoryViewRequestDto request, System.Threading.CancellationToken cancellationToken);

    }

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial interface ILineClient
    {
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<AddLineCommitResponseDto> AddLineAsync(string apiVersion, string spaceId, string repositoryId, AddLineCommitRequestDto commitRequestDto);

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<AddLineCommitResponseDto> AddLineAsync(string apiVersion, string spaceId, string repositoryId, AddLineCommitRequestDto commitRequestDto, System.Threading.CancellationToken cancellationToken);

        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<DeleteLineCommitResponseDto> DeleteLineAsync(string apiVersion, string spaceId, string repositoryId, DeleteLineCommitRequestDto commitRequestDto);

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<DeleteLineCommitResponseDto> DeleteLineAsync(string apiVersion, string spaceId, string repositoryId, DeleteLineCommitRequestDto commitRequestDto, System.Threading.CancellationToken cancellationToken);

        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<AddLineCommitResponseDto> UpdateLineAsync(string apiVersion, string spaceId, string repositoryId, UpdateLineCommitRequestDto commitRequestDto);

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<AddLineCommitResponseDto> UpdateLineAsync(string apiVersion, string spaceId, string repositoryId, UpdateLineCommitRequestDto commitRequestDto, System.Threading.CancellationToken cancellationToken);

    }

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial interface IColumnClient
    {
        /// <summary>
        /// Display a Parameter in the
        /// <br/>RepositoryView
        /// </summary>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<DisplayColumnCommitResponseDto> DisplayColumnAsync(string apiVersion, string spaceId, string repositoryId, DisplayColumnCommitRequestDto request);

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Display a Parameter in the
        /// <br/>RepositoryView
        /// </summary>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<DisplayColumnCommitResponseDto> DisplayColumnAsync(string apiVersion, string spaceId, string repositoryId, DisplayColumnCommitRequestDto request, System.Threading.CancellationToken cancellationToken);

        /// <summary>
        /// Hide a Parameter in the RepositoryView
        /// </summary>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<HideColumnCommitResponseDto> HideColumnAsync(string apiVersion, string spaceId, string repositoryId, HideColumnCommitRequestDto request);

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Hide a Parameter in the RepositoryView
        /// </summary>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<HideColumnCommitResponseDto> HideColumnAsync(string apiVersion, string spaceId, string repositoryId, HideColumnCommitRequestDto request, System.Threading.CancellationToken cancellationToken);

        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<HideAllColumnCommitResponseDto> HideAllColumnAsync(string apiVersion, string spaceId, string repositoryId, HideAllColumnCommitRequestDto request);

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<HideAllColumnCommitResponseDto> HideAllColumnAsync(string apiVersion, string spaceId, string repositoryId, HideAllColumnCommitRequestDto request, System.Threading.CancellationToken cancellationToken);

        /// <summary>
        /// Re-order Parameter in the
        /// <br/>RepositoryView
        /// </summary>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<ReOrderColumnCommitResponseDto> ReOrderColumnAsync(string apiVersion, string spaceId, string repositoryId, ReOrderColumnCommitRequestDto request);

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Re-order Parameter in the
        /// <br/>RepositoryView
        /// </summary>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<ReOrderColumnCommitResponseDto> ReOrderColumnAsync(string apiVersion, string spaceId, string repositoryId, ReOrderColumnCommitRequestDto request, System.Threading.CancellationToken cancellationToken);

    }

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial interface IBatchClient
    {
        /// <summary>
        /// Add a set of Parameter to the
        /// <br/>Repository and
        /// <br/>associate the
        /// <br/>Value to all
        /// <br/>Entity
        /// </summary>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<AddColumnsBatchCommitResponseDto> AddColumnsBatchAsync(string apiVersion, string spaceId, string repositoryId, AddColumnsBatchCommitRequestDto commitRequestDto);

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Add a set of Parameter to the
        /// <br/>Repository and
        /// <br/>associate the
        /// <br/>Value to all
        /// <br/>Entity
        /// </summary>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<AddColumnsBatchCommitResponseDto> AddColumnsBatchAsync(string apiVersion, string spaceId, string repositoryId, AddColumnsBatchCommitRequestDto commitRequestDto, System.Threading.CancellationToken cancellationToken);

        /// <summary>
        /// Add a set of Parameter to the
        /// <br/>Repository and
        /// <br/>associate the
        /// <br/>Value to all
        /// <br/>Entity
        /// </summary>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<DeleteColumnsBatchCommitResponseDto> DeleteColumnsBatchAsync(string apiVersion, string spaceId, string repositoryId, DeleteColumnsBatchCommitRequestDto requestDto);

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Add a set of Parameter to the
        /// <br/>Repository and
        /// <br/>associate the
        /// <br/>Value to all
        /// <br/>Entity
        /// </summary>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<DeleteColumnsBatchCommitResponseDto> DeleteColumnsBatchAsync(string apiVersion, string spaceId, string repositoryId, DeleteColumnsBatchCommitRequestDto requestDto, System.Threading.CancellationToken cancellationToken);

        /// <summary>
        /// Add a Parameter to the Repository and
        /// <br/>associate the
        /// <br/>Value to all
        /// <br/>Entity
        /// </summary>
        /// <returns>An IActionResult containing a AddColumnBatchCommitResponseDto</returns>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<AddColumnBatchCommitResponseDto> AddColumnBatchAsync(string apiVersion, string spaceId, string repositoryId, AddColumnBatchCommitRequestDto requestDto);

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Add a Parameter to the Repository and
        /// <br/>associate the
        /// <br/>Value to all
        /// <br/>Entity
        /// </summary>
        /// <returns>An IActionResult containing a AddColumnBatchCommitResponseDto</returns>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<AddColumnBatchCommitResponseDto> AddColumnBatchAsync(string apiVersion, string spaceId, string repositoryId, AddColumnBatchCommitRequestDto requestDto, System.Threading.CancellationToken cancellationToken);

        /// <summary>
        /// Delete a Parameter and all Value
        /// <br/>associated to
        /// <br/>Entity of the Repository
        /// </summary>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<DeleteColumnBatchCommitResponseDto> DeleteColumnBatchAsync(string apiVersion, string spaceId, string repositoryId, DeleteColumnBatchCommitRequestDto requestDto);

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Delete a Parameter and all Value
        /// <br/>associated to
        /// <br/>Entity of the Repository
        /// </summary>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<DeleteColumnBatchCommitResponseDto> DeleteColumnBatchAsync(string apiVersion, string spaceId, string repositoryId, DeleteColumnBatchCommitRequestDto requestDto, System.Threading.CancellationToken cancellationToken);

        /// <summary>
        /// Update a Parameter and its Value to all
        /// <br/>Entity entities in the Repository
        /// </summary>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<UpdateColumnBatchCommitResponseDto> UpdateColumnBatchAsync(string apiVersion, string spaceId, string repositoryId, UpdateColumnBatchCommitRequestDto commitRequestDto);

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Update a Parameter and its Value to all
        /// <br/>Entity entities in the Repository
        /// </summary>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<UpdateColumnBatchCommitResponseDto> UpdateColumnBatchAsync(string apiVersion, string spaceId, string repositoryId, UpdateColumnBatchCommitRequestDto commitRequestDto, System.Threading.CancellationToken cancellationToken);

        /// <summary>
        /// Add multiple Entity to a Repository.
        /// </summary>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<AddLinesBatchCommitResponseDto> AddLinesBatchAsync(string apiVersion, string spaceId, string repositoryId, AddLinesBatchCommitRequestDto commitRequestDto);

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Add multiple Entity to a Repository.
        /// </summary>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<AddLinesBatchCommitResponseDto> AddLinesBatchAsync(string apiVersion, string spaceId, string repositoryId, AddLinesBatchCommitRequestDto commitRequestDto, System.Threading.CancellationToken cancellationToken);

        /// <summary>
        /// Update multiple Entity cells values of a
        /// <br/>Repository
        /// <br/>.
        /// </summary>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<UpdateLinesBatchCommitResponseDto> UpdateLinesBatchAsync(string apiVersion, string spaceId, string repositoryId, UpdateLinesBatchCommitRequestDto commitRequestDto);

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Update multiple Entity cells values of a
        /// <br/>Repository
        /// <br/>.
        /// </summary>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<UpdateLinesBatchCommitResponseDto> UpdateLinesBatchAsync(string apiVersion, string spaceId, string repositoryId, UpdateLinesBatchCommitRequestDto commitRequestDto, System.Threading.CancellationToken cancellationToken);

        /// <summary>
        /// Put a .
        /// <br/>
        /// <br/>
        /// <br/>    
        /// <br/>        
        /// <br/>            Cleaning
        /// <br/>            Cleaning the Repository of all of its owned elements (Parameters, Views, Entities, Values)
        /// <br/>        
        /// <br/>        
        /// <br/>            Cleaning
        /// <br/>            Cleaning the Repository of all of its owned elements (Parameters, Views, Entities, Values)
        /// </summary>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<PutTableBatchCommitResponseDto> PutTableBatchAsync(System.Guid tableId, System.Guid userId, string apiVersion, string spaceId, string repositoryId, ExternalPutTableBatchCommitRequestDto commitRequestDto);

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Put a .
        /// <br/>
        /// <br/>
        /// <br/>    
        /// <br/>        
        /// <br/>            Cleaning
        /// <br/>            Cleaning the Repository of all of its owned elements (Parameters, Views, Entities, Values)
        /// <br/>        
        /// <br/>        
        /// <br/>            Cleaning
        /// <br/>            Cleaning the Repository of all of its owned elements (Parameters, Views, Entities, Values)
        /// </summary>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<PutTableBatchCommitResponseDto> PutTableBatchAsync(System.Guid tableId, System.Guid userId, string apiVersion, string spaceId, string repositoryId, ExternalPutTableBatchCommitRequestDto commitRequestDto, System.Threading.CancellationToken cancellationToken);

    }

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial interface IAutomationActionClient
    {
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<PostAutomationActionResponseDto> PostAsync(string apiVersion, string spaceId, string automationId, PostAutomationActionRequestDto requestDto);

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<PostAutomationActionResponseDto> PostAsync(string apiVersion, string spaceId, string automationId, PostAutomationActionRequestDto requestDto, System.Threading.CancellationToken cancellationToken);

        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<DeleteAutomationActionResponseDto> DeleteAsync(System.Guid automationId, System.Guid automationActionId, AutomationActionTypeEnum type, string apiVersion, string spaceId);

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<DeleteAutomationActionResponseDto> DeleteAsync(System.Guid automationId, System.Guid automationActionId, AutomationActionTypeEnum type, string apiVersion, string spaceId, System.Threading.CancellationToken cancellationToken);

        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<PatchAutomationActionPopulatorSetParameterIdResponseDto> PatchParameterIdAsync(System.Guid automationId, System.Guid automationActionId, System.Guid parameterId, string apiVersion, string spaceId);

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<PatchAutomationActionPopulatorSetParameterIdResponseDto> PatchParameterIdAsync(System.Guid automationId, System.Guid automationActionId, System.Guid parameterId, string apiVersion, string spaceId, System.Threading.CancellationToken cancellationToken);

    }

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial interface IAutomationActionPopulatorSetClient
    {
        /// <summary>
        /// Post a new Automation Action Populator in an existing Action
        /// </summary>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<PostAutomationActionPopulatorSetPopulatorResponseDto> PostAsync(string apiVersion, string spaceId, string automationId, string automationActionId, PostAutomationActionPopulatorSetPopulatorRequestDto requestDto);

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Post a new Automation Action Populator in an existing Action
        /// </summary>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<PostAutomationActionPopulatorSetPopulatorResponseDto> PostAsync(string apiVersion, string spaceId, string automationId, string automationActionId, PostAutomationActionPopulatorSetPopulatorRequestDto requestDto, System.Threading.CancellationToken cancellationToken);

        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<PostAutomationActionPopulatorSetPopulatorResponseDto> DeleteAsync(System.Guid populatorItemId, AutomationActionPopulatorTypeEnum type, string apiVersion, string spaceId, string automationId, string automationActionId);

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<PostAutomationActionPopulatorSetPopulatorResponseDto> DeleteAsync(System.Guid populatorItemId, AutomationActionPopulatorTypeEnum type, string apiVersion, string spaceId, string automationId, string automationActionId, System.Threading.CancellationToken cancellationToken);

        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<PatchAutomationActionPopulatorSetPopulatorFormulaResponseDto> PatchFormulaAsync(string apiVersion, string spaceId, string automationId, string automationActionId, PatchAutomationActionPopulatorSetPopulatorFormulaRequestDto requestDto);

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<PatchAutomationActionPopulatorSetPopulatorFormulaResponseDto> PatchFormulaAsync(string apiVersion, string spaceId, string automationId, string automationActionId, PatchAutomationActionPopulatorSetPopulatorFormulaRequestDto requestDto, System.Threading.CancellationToken cancellationToken);

        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<PatchAutomationActionPopulatorSetPopulatorValueResponseDto> PatchValueAsync(string apiVersion, string spaceId, string automationId, string automationActionId, PatchAutomationActionPopulatorSetPopulatorValueRequestDto requestDto);

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<PatchAutomationActionPopulatorSetPopulatorValueResponseDto> PatchValueAsync(string apiVersion, string spaceId, string automationId, string automationActionId, PatchAutomationActionPopulatorSetPopulatorValueRequestDto requestDto, System.Threading.CancellationToken cancellationToken);

        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<PatchAutomationActionPopulatorSetPopulatorEntityResponseDto> PatchEntityAsync(string apiVersion, string spaceId, string automationId, string automationActionId, PatchAutomationActionPopulatorSetPopulatorEntityRequestDto requestDto);

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<PatchAutomationActionPopulatorSetPopulatorEntityResponseDto> PatchEntityAsync(string apiVersion, string spaceId, string automationId, string automationActionId, PatchAutomationActionPopulatorSetPopulatorEntityRequestDto requestDto, System.Threading.CancellationToken cancellationToken);

        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<PatchAutomationActionPopulatorSetPopulatorParameterResponseDto> PatchParameterAsync(string apiVersion, string spaceId, string automationId, string automationActionId, PatchAutomationActionPopulatorSetPopulatorParameterRequestDto requestDto);

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<PatchAutomationActionPopulatorSetPopulatorParameterResponseDto> PatchParameterAsync(string apiVersion, string spaceId, string automationId, string automationActionId, PatchAutomationActionPopulatorSetPopulatorParameterRequestDto requestDto, System.Threading.CancellationToken cancellationToken);

        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<PatchAutomationActionPopulatorSetReOrderRequestDto> PatchReOrderAsync(System.Guid spaceId, System.Guid automationId, System.Guid automationActionId, string apiVersion, PatchAutomationActionPopulatorSetReOrderRequestDto requestDto);

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<PatchAutomationActionPopulatorSetReOrderRequestDto> PatchReOrderAsync(System.Guid spaceId, System.Guid automationId, System.Guid automationActionId, string apiVersion, PatchAutomationActionPopulatorSetReOrderRequestDto requestDto, System.Threading.CancellationToken cancellationToken);

    }

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial interface IAutomationActionValidatorSetClient
    {
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<PostAutomationValidatorSetItemResponseDto> PostAsync(System.Guid automationId, System.Guid automationActionId, string apiVersion, string spaceId);

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<PostAutomationValidatorSetItemResponseDto> PostAsync(System.Guid automationId, System.Guid automationActionId, string apiVersion, string spaceId, System.Threading.CancellationToken cancellationToken);

        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<FileResponse> ReOrderAsync(System.Guid itemId, string apiVersion, string spaceId, string automationId, string automationActionId, ReOrderValidatorSetItemsRequestDto reorderDto);

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<FileResponse> ReOrderAsync(System.Guid itemId, string apiVersion, string spaceId, string automationId, string automationActionId, ReOrderValidatorSetItemsRequestDto reorderDto, System.Threading.CancellationToken cancellationToken);

        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<FileResponse> PatchOperatorAsync(System.Guid itemId, string apiVersion, string spaceId, string automationId, string automationActionId, AutomationActionValidatorItemOperatorEnum @operator);

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<FileResponse> PatchOperatorAsync(System.Guid itemId, string apiVersion, string spaceId, string automationId, string automationActionId, AutomationActionValidatorItemOperatorEnum @operator, System.Threading.CancellationToken cancellationToken);

        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<FileResponse> PatchParameterIdAsync(System.Guid itemId, string apiVersion, string spaceId, string automationId, string automationActionId, System.Guid parameterId);

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<FileResponse> PatchParameterIdAsync(System.Guid itemId, string apiVersion, string spaceId, string automationId, string automationActionId, System.Guid parameterId, System.Threading.CancellationToken cancellationToken);

        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<FileResponse> PatchValueAsync(System.Guid itemId, string apiVersion, string spaceId, string automationId, string automationActionId, string value);

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<FileResponse> PatchValueAsync(System.Guid itemId, string apiVersion, string spaceId, string automationId, string automationActionId, string value, System.Threading.CancellationToken cancellationToken);

        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<FileResponse> DeleteValidatorItemAsync(System.Guid itemId, string apiVersion, string spaceId, string automationId, string automationActionId);

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<FileResponse> DeleteValidatorItemAsync(System.Guid itemId, string apiVersion, string spaceId, string automationId, string automationActionId, System.Threading.CancellationToken cancellationToken);

    }

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial interface IAutomationConditionClient
    {
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<PostAutomationConditionResponseDto> PostAsync(System.Guid automationId, string apiVersion, string spaceId, string api_version);

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<PostAutomationConditionResponseDto> PostAsync(System.Guid automationId, string apiVersion, string spaceId, string api_version, System.Threading.CancellationToken cancellationToken);

        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<DeleteAutomationConditionResponseDto> DeleteAsync(System.Guid id, string apiVersion, string spaceId, string automationId, string api_version);

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<DeleteAutomationConditionResponseDto> DeleteAsync(System.Guid id, string apiVersion, string spaceId, string automationId, string api_version, System.Threading.CancellationToken cancellationToken);

        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<PatchAutomationConditionOperatorResponseDto> SetOperatorAsync(System.Guid id, AutomationConditionOperatorEnum @operator, string apiVersion, string spaceId, string automationId, string api_version);

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<PatchAutomationConditionOperatorResponseDto> SetOperatorAsync(System.Guid id, AutomationConditionOperatorEnum @operator, string apiVersion, string spaceId, string automationId, string api_version, System.Threading.CancellationToken cancellationToken);

        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<PatchAutomationConditionParameterIdResponseDto> SetParameterAsync(System.Guid id, System.Guid parameterId, string apiVersion, string spaceId, string automationId, string api_version);

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<PatchAutomationConditionParameterIdResponseDto> SetParameterAsync(System.Guid id, System.Guid parameterId, string apiVersion, string spaceId, string automationId, string api_version, System.Threading.CancellationToken cancellationToken);

        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<PatchAutomationConditionValueResponseDto> SetValueAsync(System.Guid id, string value, string apiVersion, string spaceId, string automationId, string api_version);

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<PatchAutomationConditionValueResponseDto> SetValueAsync(System.Guid id, string value, string apiVersion, string spaceId, string automationId, string api_version, System.Threading.CancellationToken cancellationToken);

    }

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial interface IAutomationClient
    {
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<ValidateAutomationResponseDto> ErrorsAsync(System.Guid automationId, string apiVersion, string spaceId);

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<ValidateAutomationResponseDto> ErrorsAsync(System.Guid automationId, string apiVersion, string spaceId, System.Threading.CancellationToken cancellationToken);

        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<EditAutomationResponseDto> EditAsync(EditAutomationRequestDto request);

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<EditAutomationResponseDto> EditAsync(EditAutomationRequestDto request, System.Threading.CancellationToken cancellationToken);

        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<PostAutomationResponseDto> PostAsync(string apiVersion, string spaceId, PostAutomationRequestDto automationDto);

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<PostAutomationResponseDto> PostAsync(string apiVersion, string spaceId, PostAutomationRequestDto automationDto, System.Threading.CancellationToken cancellationToken);

        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<ListAutomationResponseDto> ListAsync(string apiVersion, string spaceId);

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<ListAutomationResponseDto> ListAsync(string apiVersion, string spaceId, System.Threading.CancellationToken cancellationToken);

        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<DeleteAutomationResponseDto> DeleteAsync(System.Guid automationId, string apiVersion, string spaceId);

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<DeleteAutomationResponseDto> DeleteAsync(System.Guid automationId, string apiVersion, string spaceId, System.Threading.CancellationToken cancellationToken);

        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<ViewAutomationResponseDto> ViewAsync(System.Guid automationId, string apiVersion, string spaceId);

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<ViewAutomationResponseDto> ViewAsync(System.Guid automationId, string apiVersion, string spaceId, System.Threading.CancellationToken cancellationToken);

        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<ResetAutomationResponseDto> ResetAsync(System.Guid automationId, string apiVersion, string spaceId);

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<ResetAutomationResponseDto> ResetAsync(System.Guid automationId, string apiVersion, string spaceId, System.Threading.CancellationToken cancellationToken);

        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<StartTableAutomationResponseDto> StartAsync(System.Guid automationId, string apiVersion, string spaceId);

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<StartTableAutomationResponseDto> StartAsync(System.Guid automationId, string apiVersion, string spaceId, System.Threading.CancellationToken cancellationToken);

        /// <param name="automationId">Automation Execution Id</param>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<CancelAutomationExecutionResponseDto> CancelAsync(System.Guid automationId, string apiVersion, string spaceId);

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <param name="automationId">Automation Execution Id</param>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<CancelAutomationExecutionResponseDto> CancelAsync(System.Guid automationId, string apiVersion, string spaceId, System.Threading.CancellationToken cancellationToken);

        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<ReOrderAutomationActionsResponseDto> ReOrderActionsAsync(string apiVersion, string spaceId, ReOrderAutomationActionsRequestDto request);

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<ReOrderAutomationActionsResponseDto> ReOrderActionsAsync(string apiVersion, string spaceId, ReOrderAutomationActionsRequestDto request, System.Threading.CancellationToken cancellationToken);

        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<ReOrderAutomationConditionsResponseDto> ReOrderConditionsAsync(string apiVersion, string spaceId, ReOrderAutomationConditionsRequestDto request);

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<ReOrderAutomationConditionsResponseDto> ReOrderConditionsAsync(string apiVersion, string spaceId, ReOrderAutomationConditionsRequestDto request, System.Threading.CancellationToken cancellationToken);

        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<StartAllSpaceAutomationsRequestDto> StartAllAutomationsAsync(System.Guid spaceId, string apiVersion);

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<StartAllSpaceAutomationsRequestDto> StartAllAutomationsAsync(System.Guid spaceId, string apiVersion, System.Threading.CancellationToken cancellationToken);

        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<PatchAutomationConditionStrategyResponseDto> PatchConditionAsync(string apiVersion, string spaceId, PatchAutomationConditionStrategyRequestDto strategyRequestDto);

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<PatchAutomationConditionStrategyResponseDto> PatchConditionAsync(string apiVersion, string spaceId, PatchAutomationConditionStrategyRequestDto strategyRequestDto, System.Threading.CancellationToken cancellationToken);

    }

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial interface IAutomationExecutionClient
    {
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<ListAutomationExecutionResponseDto> ListAsync(System.Guid automationId, string apiVersion, string spaceId);

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<ListAutomationExecutionResponseDto> ListAsync(System.Guid automationId, string apiVersion, string spaceId, System.Threading.CancellationToken cancellationToken);

        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<AutomationExecutionView> ViewAsync(System.Guid automationExecutionId, string apiVersion, string spaceId, string automationId);

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<AutomationExecutionView> ViewAsync(System.Guid automationExecutionId, string apiVersion, string spaceId, string automationId, System.Threading.CancellationToken cancellationToken);

        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<FilterAutomationActionValidatorItemResultsResponseDto> FilterAsync(string apiVersion, string spaceId, string automationId, string automationExecutionId, FilterAutomationActionValidatorItemResultsRequestDto request);

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<FilterAutomationActionValidatorItemResultsResponseDto> FilterAsync(string apiVersion, string spaceId, string automationId, string automationExecutionId, FilterAutomationActionValidatorItemResultsRequestDto request, System.Threading.CancellationToken cancellationToken);

    }

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial interface IAutomationExecutionSetClient
    {
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<GetAutomationExecutionSetSummaryReportResponseDto> SummaryAsync(System.Guid spaceId, System.Guid automationExecutionSetId, string apiVersion);

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<GetAutomationExecutionSetSummaryReportResponseDto> SummaryAsync(System.Guid spaceId, System.Guid automationExecutionSetId, string apiVersion, System.Threading.CancellationToken cancellationToken);

        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<GetAutomationExecutionSetStatusResponseDto> GetStatusAsync(System.Guid automationExecutionSetId, string apiVersion, string spaceId);

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<GetAutomationExecutionSetStatusResponseDto> GetStatusAsync(System.Guid automationExecutionSetId, string apiVersion, string spaceId, System.Threading.CancellationToken cancellationToken);

    }

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial interface IPingClient
    {
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<string> PingAsync();

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<string> PingAsync(System.Threading.CancellationToken cancellationToken);

    }

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial interface ITestIfcClient
    {
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<FileResponse> PostAsync(FileParameter uploadedFile);

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<FileResponse> PostAsync(FileParameter uploadedFile, System.Threading.CancellationToken cancellationToken);

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class TestSetupInfo
    {
        [Newtonsoft.Json.JsonProperty("repositoryId", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid RepositoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("userId", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid UserId { get; set; }

        [Newtonsoft.Json.JsonProperty("spaceId", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid SpaceId { get; set; }

        [Newtonsoft.Json.JsonProperty("spaceName", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string SpaceName { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static TestSetupInfo FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<TestSetupInfo>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ResponseWithGuidDto : ResponseDto
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Id { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static ResponseWithGuidDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<ResponseWithGuidDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ResponseDto
    {

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static ResponseDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<ResponseDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PostUserRequestDto
    {
        [Newtonsoft.Json.JsonProperty("name", Required = Newtonsoft.Json.Required.Always)]
        public string Name { get; set; }

        [Newtonsoft.Json.JsonProperty("email", Required = Newtonsoft.Json.Required.Always)]
        public string Email { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static PostUserRequestDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<PostUserRequestDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class UserDto
    {
        [Newtonsoft.Json.JsonProperty("name", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Name { get; set; }

        [Newtonsoft.Json.JsonProperty("color", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Color { get; set; }

        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Id { get; set; }

        [Newtonsoft.Json.JsonProperty("email", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Email { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static UserDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<UserDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class UserRegisterRequestDto
    {
        [Newtonsoft.Json.JsonProperty("name", Required = Newtonsoft.Json.Required.Always)]
        public string Name { get; set; }

        [Newtonsoft.Json.JsonProperty("password", Required = Newtonsoft.Json.Required.Always)]
        public string Password { get; set; }

        /// <summary>
        /// /
        /// <br/>            
        /// </summary>
        [Newtonsoft.Json.JsonProperty("email", Required = Newtonsoft.Json.Required.Always)]
        public string Email { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static UserRegisterRequestDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<UserRegisterRequestDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class UserLoginRequestDto
    {
        [Newtonsoft.Json.JsonProperty("email", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Email { get; set; }

        /// <summary>
        /// /
        /// <br/>            
        /// </summary>
        [Newtonsoft.Json.JsonProperty("password", Required = Newtonsoft.Json.Required.Always)]
        public string Password { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static UserLoginRequestDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<UserLoginRequestDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class MeResponseDto
    {
        [Newtonsoft.Json.JsonProperty("userId", Required = Newtonsoft.Json.Required.Always)]
        public System.Guid UserId { get; set; }

        [Newtonsoft.Json.JsonProperty("spaces", Required = Newtonsoft.Json.Required.Always)]
        public System.Collections.ObjectModel.ObservableCollection<SpaceViewModel> Spaces { get; set; } = new System.Collections.ObjectModel.ObservableCollection<SpaceViewModel>();

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static MeResponseDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<MeResponseDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SpaceViewModel
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        public System.Guid Id { get; set; }

        [Newtonsoft.Json.JsonProperty("name", Required = Newtonsoft.Json.Required.Always)]
        public string Name { get; set; }

        [Newtonsoft.Json.JsonProperty("repositories", Required = Newtonsoft.Json.Required.Always)]
        public System.Collections.ObjectModel.ObservableCollection<RepositoryViewModel> Repositories { get; set; } = new System.Collections.ObjectModel.ObservableCollection<RepositoryViewModel>();

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static SpaceViewModel FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<SpaceViewModel>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class RepositoryViewModel
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Id { get; set; }

        [Newtonsoft.Json.JsonProperty("name", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Name { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static RepositoryViewModel FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<RepositoryViewModel>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class UserRepositoryPostDto
    {
        [Newtonsoft.Json.JsonProperty("userId", Required = Newtonsoft.Json.Required.Always)]
        public System.Guid UserId { get; set; }

        [Newtonsoft.Json.JsonProperty("repositoryId", Required = Newtonsoft.Json.Required.Always)]
        public System.Guid RepositoryId { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static UserRepositoryPostDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<UserRepositoryPostDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class UserRepositoryListResponseDto
    {
        [Newtonsoft.Json.JsonProperty("repositories", Required = Newtonsoft.Json.Required.Always)]
        public System.Collections.ObjectModel.ObservableCollection<UserRepositoryResponseDto> Repositories { get; set; } = new System.Collections.ObjectModel.ObservableCollection<UserRepositoryResponseDto>();

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static UserRepositoryListResponseDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<UserRepositoryListResponseDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class UserRepositoryResponseDto
    {
        [Newtonsoft.Json.JsonProperty("repositoryId", Required = Newtonsoft.Json.Required.Always)]
        public System.Guid RepositoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("repositoryName", Required = Newtonsoft.Json.Required.Always)]
        public string RepositoryName { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static UserRepositoryResponseDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<UserRepositoryResponseDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class UserRepositoryDeleteDto
    {
        [Newtonsoft.Json.JsonProperty("userId", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid UserId { get; set; }

        [Newtonsoft.Json.JsonProperty("repositoryId", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid RepositoryId { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static UserRepositoryDeleteDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<UserRepositoryDeleteDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PostSpaceResponseDto
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        public System.Guid Id { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static PostSpaceResponseDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<PostSpaceResponseDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PostSpaceRequestDto
    {
        [Newtonsoft.Json.JsonProperty("name", Required = Newtonsoft.Json.Required.Always)]
        public string Name { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static PostSpaceRequestDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<PostSpaceRequestDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ListSpacesResponseDto
    {
        [Newtonsoft.Json.JsonProperty("spaces", Required = Newtonsoft.Json.Required.Always)]
        public System.Collections.ObjectModel.ObservableCollection<ListSpaceViewModel> Spaces { get; set; } = new System.Collections.ObjectModel.ObservableCollection<ListSpaceViewModel>();

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static ListSpacesResponseDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<ListSpacesResponseDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ListSpaceViewModel
    {
        [Newtonsoft.Json.JsonProperty("name", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Name { get; set; }

        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Id { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static ListSpaceViewModel FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<ListSpaceViewModel>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ListSpacesRequestDto
    {

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static ListSpacesRequestDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<ListSpacesRequestDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class DeleteSpaceResponseDto
    {

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static DeleteSpaceResponseDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<DeleteSpaceResponseDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PostSpaceUserRequestDto
    {
        [Newtonsoft.Json.JsonProperty("spaceId", Required = Newtonsoft.Json.Required.Always)]
        public System.Guid SpaceId { get; set; }

        [Newtonsoft.Json.JsonProperty("userId", Required = Newtonsoft.Json.Required.Always)]
        public System.Guid UserId { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static PostSpaceUserRequestDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<PostSpaceUserRequestDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class DeleteSpaceUserResponseDto
    {

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static DeleteSpaceUserResponseDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<DeleteSpaceUserResponseDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ListSpaceUsersResponseDto
    {
        [Newtonsoft.Json.JsonProperty("users", Required = Newtonsoft.Json.Required.Always)]
        public System.Collections.ObjectModel.ObservableCollection<UserDto> Users { get; set; } = new System.Collections.ObjectModel.ObservableCollection<UserDto>();

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static ListSpaceUsersResponseDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<ListSpaceUsersResponseDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PostRepositoryResponseDto : ResponseWithGuidDto
    {
        [Newtonsoft.Json.JsonProperty("defaultViewId", Required = Newtonsoft.Json.Required.Always)]
        public System.Guid DefaultViewId { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static PostRepositoryResponseDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<PostRepositoryResponseDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PostRepositoryRequestDto : RepositoryRequestDto
    {
        [Newtonsoft.Json.JsonProperty("spaceId", Required = Newtonsoft.Json.Required.Always)]
        public System.Guid SpaceId { get; set; }

        [Newtonsoft.Json.JsonProperty("name", Required = Newtonsoft.Json.Required.Always)]
        public string Name { get; set; }

        [Newtonsoft.Json.JsonProperty("defaultRepositoryViewName", Required = Newtonsoft.Json.Required.Always)]
        public string DefaultRepositoryViewName { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static PostRepositoryRequestDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<PostRepositoryRequestDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public abstract partial class RepositoryRequestDto
    {

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static RepositoryRequestDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<RepositoryRequestDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class GetRepositoryResponseDto
    {
        [Newtonsoft.Json.JsonProperty("repository", Required = Newtonsoft.Json.Required.Always)]
        public RepositoryDto Repository { get; set; } = new RepositoryDto();

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static GetRepositoryResponseDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<GetRepositoryResponseDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class RepositoryDto
    {
        [Newtonsoft.Json.JsonProperty("numberOfParameters", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int NumberOfParameters { get; set; }

        [Newtonsoft.Json.JsonProperty("numberOfEntities", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int NumberOfEntities { get; set; }

        [Newtonsoft.Json.JsonProperty("numberOfViews", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int NumberOfViews { get; set; }

        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Id { get; set; }

        [Newtonsoft.Json.JsonProperty("name", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Name { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static RepositoryDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<RepositoryDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ListRepositoryResponseDto
    {
        [Newtonsoft.Json.JsonProperty("repositories", Required = Newtonsoft.Json.Required.Always)]
        public System.Collections.ObjectModel.ObservableCollection<RepositoryDetailsDto> Repositories { get; set; } = new System.Collections.ObjectModel.ObservableCollection<RepositoryDetailsDto>();

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static ListRepositoryResponseDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<ListRepositoryResponseDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class RepositoryDetailsDto
    {
        [Newtonsoft.Json.JsonProperty("views", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.ObjectModel.ObservableCollection<RepositoryViewDetailsDto> Views { get; set; }

        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Id { get; set; }

        [Newtonsoft.Json.JsonProperty("name", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Name { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static RepositoryDetailsDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<RepositoryDetailsDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class RepositoryViewDetailsDto
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Id { get; set; }

        [Newtonsoft.Json.JsonProperty("name", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Name { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static RepositoryViewDetailsDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<RepositoryViewDetailsDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class DeleteRepositoryResponseDto : DeleteOkObjectResult
    {

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static DeleteRepositoryResponseDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<DeleteRepositoryResponseDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class DeleteOkObjectResult
    {
        [Newtonsoft.Json.JsonProperty("numberOfItemsDeleted", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int NumberOfItemsDeleted { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static DeleteOkObjectResult FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<DeleteOkObjectResult>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PatchRepositoryResponseWithGuidDtoDto : ResponseWithGuidDto
    {

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static PatchRepositoryResponseWithGuidDtoDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<PatchRepositoryResponseWithGuidDtoDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PatchRepositoryRequestDto : RepositoryRequestDto
    {
        [Newtonsoft.Json.JsonProperty("repositoryId", Required = Newtonsoft.Json.Required.Always)]
        public System.Guid RepositoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("newName", Required = Newtonsoft.Json.Required.Always)]
        public string NewName { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static PatchRepositoryRequestDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<PatchRepositoryRequestDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class StartAllTableAutomationsResponseDto
    {

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static StartAllTableAutomationsResponseDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<StartAllTableAutomationsResponseDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class GetAllTableAutomationsStatusResponseDto
    {
        [Newtonsoft.Json.JsonProperty("automations", Required = Newtonsoft.Json.Required.Always)]
        public System.Collections.ObjectModel.ObservableCollection<AutomationViewModel> Automations { get; set; } = new System.Collections.ObjectModel.ObservableCollection<AutomationViewModel>();

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static GetAllTableAutomationsStatusResponseDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<GetAllTableAutomationsStatusResponseDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class AutomationViewModel
    {
        [Newtonsoft.Json.JsonProperty("automationId", Required = Newtonsoft.Json.Required.Always)]
        public System.Guid AutomationId { get; set; }

        [Newtonsoft.Json.JsonProperty("status", Required = Newtonsoft.Json.Required.Always)]
        public AutomationExecutionStatusViewModelEnum Status { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static AutomationViewModel FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<AutomationViewModel>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    /// <summary>
    /// 0 = None
    /// <br/>1 = Pending
    /// <br/>2 = Cancelling
    /// <br/>3 = CancelRequested
    /// <br/>4 = Cancelled
    /// <br/>5 = Executing
    /// <br/>6 = Executed
    /// <br/>7 = OnError
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum AutomationExecutionStatusViewModelEnum
    {

        None = 0,

        Pending = 1,

        Cancelling = 2,

        CancelRequested = 3,

        Cancelled = 4,

        Executing = 5,

        Executed = 6,

        OnError = 7,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ParameterStreamingResponseDto
    {
        [Newtonsoft.Json.JsonProperty("name", Required = Newtonsoft.Json.Required.Always)]
        public string Name { get; set; }

        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        public System.Guid Id { get; set; }

        [Newtonsoft.Json.JsonProperty("isVisible", Required = Newtonsoft.Json.Required.Always)]
        public bool IsVisible { get; set; }

        [Newtonsoft.Json.JsonProperty("type", Required = Newtonsoft.Json.Required.Always)]
        public string Type { get; set; }

        [Newtonsoft.Json.JsonProperty("order", Required = Newtonsoft.Json.Required.Always)]
        public int Order { get; set; }

        [Newtonsoft.Json.JsonProperty("onflyPropertyGuid", Required = Newtonsoft.Json.Required.Always)]
        public System.Guid OnflyPropertyGuid { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static ParameterStreamingResponseDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<ParameterStreamingResponseDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class RepositoryEntitiesNameAutoCompletionSearchResponse
    {
        [Newtonsoft.Json.JsonProperty("parts", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.ObjectModel.ObservableCollection<RepositoryEntitiesNameAutoCompletionSearchResponsePart> Parts { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static RepositoryEntitiesNameAutoCompletionSearchResponse FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<RepositoryEntitiesNameAutoCompletionSearchResponse>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class RepositoryEntitiesNameAutoCompletionSearchResponsePart
    {
        [Newtonsoft.Json.JsonProperty("name", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Name { get; set; }

        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Id { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static RepositoryEntitiesNameAutoCompletionSearchResponsePart FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<RepositoryEntitiesNameAutoCompletionSearchResponsePart>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class DeleteRepositoryViewResponseDto
    {
        [Newtonsoft.Json.JsonProperty("affectedRows", Required = Newtonsoft.Json.Required.Always)]
        public int AffectedRows { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static DeleteRepositoryViewResponseDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<DeleteRepositoryViewResponseDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class DeleteRepositoryViewRequestDto
    {
        [Newtonsoft.Json.JsonProperty("repositoryViewId", Required = Newtonsoft.Json.Required.Always)]
        public System.Guid RepositoryViewId { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static DeleteRepositoryViewRequestDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<DeleteRepositoryViewRequestDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class GetRepositoryViewResponseDto
    {
        [Newtonsoft.Json.JsonProperty("repositoryView", Required = Newtonsoft.Json.Required.Always)]
        public RepositoryViewDto RepositoryView { get; set; } = new RepositoryViewDto();

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static GetRepositoryViewResponseDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<GetRepositoryViewResponseDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class RepositoryViewDto
    {
        [Newtonsoft.Json.JsonProperty("name", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Name { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("parameters", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.ObjectModel.ObservableCollection<RepositoryViewParameterDto> Parameters { get; set; }

        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? Id { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static RepositoryViewDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<RepositoryViewDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class RepositoryViewParameterDto
    {
        /// <summary>
        /// /
        /// <br/>            
        /// </summary>
        [Newtonsoft.Json.JsonProperty("parameterDataType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ParameterDataType { get; set; }

        [Newtonsoft.Json.JsonProperty("parameterKind", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ParameterKind { get; set; }

        [Newtonsoft.Json.JsonProperty("parameterId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ParameterId { get; set; }

        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? Id { get; set; }

        [Newtonsoft.Json.JsonProperty("name", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Name { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static RepositoryViewParameterDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<RepositoryViewParameterDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ListRepositoryViewResponseDto
    {
        [Newtonsoft.Json.JsonProperty("repositoryViews", Required = Newtonsoft.Json.Required.Always)]
        public System.Collections.ObjectModel.ObservableCollection<RepositoryViewDto> RepositoryViews { get; set; } = new System.Collections.ObjectModel.ObservableCollection<RepositoryViewDto>();

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static ListRepositoryViewResponseDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<ListRepositoryViewResponseDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PatchRepositoryViewResponseDto
    {

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static PatchRepositoryViewResponseDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<PatchRepositoryViewResponseDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PatchRepositoryViewRequestDto
    {
        [Newtonsoft.Json.JsonProperty("repositoryId", Required = Newtonsoft.Json.Required.Always)]
        public System.Guid RepositoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("repositoryViewId", Required = Newtonsoft.Json.Required.Always)]
        public System.Guid RepositoryViewId { get; set; }

        [Newtonsoft.Json.JsonProperty("name", Required = Newtonsoft.Json.Required.Always)]
        public string Name { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Always)]
        public string Description { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static PatchRepositoryViewRequestDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<PatchRepositoryViewRequestDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PostRepositoryViewResponseWithGuidDto : ResponseWithGuidDto
    {

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static PostRepositoryViewResponseWithGuidDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<PostRepositoryViewResponseWithGuidDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PostRepositoryViewRequestDto
    {
        [Newtonsoft.Json.JsonProperty("name", Required = Newtonsoft.Json.Required.Always)]
        public string Name { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Always)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("repositoryId", Required = Newtonsoft.Json.Required.Always)]
        public System.Guid RepositoryId { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static PostRepositoryViewRequestDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<PostRepositoryViewRequestDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    /// <summary>
    /// /
    /// <br/>            
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class AddLineCommitResponseDto : LineCommitResponseDto
    {
        [Newtonsoft.Json.JsonProperty("entityId", Required = Newtonsoft.Json.Required.Always)]
        public System.Guid EntityId { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static AddLineCommitResponseDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<AddLineCommitResponseDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public abstract partial class LineCommitResponseDto : BaseResponseDto
    {

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static LineCommitResponseDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<LineCommitResponseDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class BaseResponseDto
    {

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static BaseResponseDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<BaseResponseDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class AddLineCommitRequestDto : LineCommitRequestDto
    {
        [Newtonsoft.Json.JsonProperty("newEntityDto", Required = Newtonsoft.Json.Required.Always)]
        public NewEntityDto NewEntityDto { get; set; } = new NewEntityDto();

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static AddLineCommitRequestDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<AddLineCommitRequestDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class NewEntityDto
    {
        [Newtonsoft.Json.JsonProperty("values", Required = Newtonsoft.Json.Required.Always)]
        public System.Collections.ObjectModel.ObservableCollection<NewCellValueDto> Values { get; set; } = new System.Collections.ObjectModel.ObservableCollection<NewCellValueDto>();

        [Newtonsoft.Json.JsonProperty("entityName", Required = Newtonsoft.Json.Required.Always)]
        public string EntityName { get; set; }

        [Newtonsoft.Json.JsonProperty("entityCadId", Required = Newtonsoft.Json.Required.Always)]
        public string EntityCadId { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static NewEntityDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<NewEntityDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class NewCellValueDto
    {
        [Newtonsoft.Json.JsonProperty("parameterId", Required = Newtonsoft.Json.Required.Always)]
        public System.Guid ParameterId { get; set; }

        [Newtonsoft.Json.JsonProperty("value", Required = Newtonsoft.Json.Required.Always)]
        public string Value { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static NewCellValueDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<NewCellValueDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public abstract partial class LineCommitRequestDto : BaseRequestDto
    {

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static LineCommitRequestDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<LineCommitRequestDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class BaseRequestDto
    {
        [Newtonsoft.Json.JsonProperty("tableId", Required = Newtonsoft.Json.Required.Always)]
        public System.Guid TableId { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static BaseRequestDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<BaseRequestDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class DeleteLineCommitResponseDto : LineCommitResponseDto
    {

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static DeleteLineCommitResponseDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<DeleteLineCommitResponseDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class DeleteLineCommitRequestDto : LineCommitRequestDto
    {
        [Newtonsoft.Json.JsonProperty("lineId", Required = Newtonsoft.Json.Required.Always)]
        public System.Guid LineId { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static DeleteLineCommitRequestDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<DeleteLineCommitRequestDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class UpdateLineCommitRequestDto : LineCommitRequestDto
    {
        [Newtonsoft.Json.JsonProperty("updateCell", Required = Newtonsoft.Json.Required.Always)]
        public CellValueDto UpdateCell { get; set; } = new CellValueDto();

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static UpdateLineCommitRequestDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<UpdateLineCommitRequestDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class CellValueDto
    {
        [Newtonsoft.Json.JsonProperty("entityId", Required = Newtonsoft.Json.Required.Always)]
        public System.Guid EntityId { get; set; }

        [Newtonsoft.Json.JsonProperty("parameterId", Required = Newtonsoft.Json.Required.Always)]
        public System.Guid ParameterId { get; set; }

        [Newtonsoft.Json.JsonProperty("value", Required = Newtonsoft.Json.Required.Always)]
        public string Value { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static CellValueDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<CellValueDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class DisplayColumnCommitResponseDto : ColumnCommitResponseDto
    {
        [Newtonsoft.Json.JsonProperty("parameterId", Required = Newtonsoft.Json.Required.Always)]
        public System.Guid ParameterId { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static DisplayColumnCommitResponseDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<DisplayColumnCommitResponseDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public abstract partial class ColumnCommitResponseDto : BaseResponseDto
    {

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static ColumnCommitResponseDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<ColumnCommitResponseDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class DisplayColumnCommitRequestDto : ColumnCommitRequestDto
    {
        [Newtonsoft.Json.JsonProperty("parameterId", Required = Newtonsoft.Json.Required.Always)]
        public System.Guid ParameterId { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static DisplayColumnCommitRequestDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<DisplayColumnCommitRequestDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    /// <summary>
    /// /
    /// <br/>            
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public abstract partial class ColumnCommitRequestDto : BaseRequestDto
    {
        [Newtonsoft.Json.JsonProperty("repositoryViewId", Required = Newtonsoft.Json.Required.Always)]
        public System.Guid RepositoryViewId { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static ColumnCommitRequestDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<ColumnCommitRequestDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class HideColumnCommitResponseDto : ColumnCommitResponseDto
    {
        [Newtonsoft.Json.JsonProperty("parameterId", Required = Newtonsoft.Json.Required.Always)]
        public System.Guid ParameterId { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static HideColumnCommitResponseDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<HideColumnCommitResponseDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class HideColumnCommitRequestDto : ColumnCommitRequestDto
    {
        [Newtonsoft.Json.JsonProperty("parameterId", Required = Newtonsoft.Json.Required.Always)]
        public System.Guid ParameterId { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static HideColumnCommitRequestDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<HideColumnCommitRequestDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class HideAllColumnCommitResponseDto : ColumnCommitResponseDto
    {

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static HideAllColumnCommitResponseDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<HideAllColumnCommitResponseDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class HideAllColumnCommitRequestDto : ColumnCommitRequestDto
    {

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static HideAllColumnCommitRequestDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<HideAllColumnCommitRequestDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ReOrderColumnCommitResponseDto : ColumnCommitResponseDto
    {
        [Newtonsoft.Json.JsonProperty("parametersOrder", Required = Newtonsoft.Json.Required.Always)]
        public System.Collections.ObjectModel.ObservableCollection<System.Guid> ParametersOrder { get; set; } = new System.Collections.ObjectModel.ObservableCollection<System.Guid>();

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static ReOrderColumnCommitResponseDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<ReOrderColumnCommitResponseDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    /// <summary>
    /// ReOrderColumnCommitRequestDto contains the payload to re-order
    /// <br/>Parameter parameters in the
    /// <br/>RepositoryView of a
    /// <br/>Repository
    /// <br/>            
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ReOrderColumnCommitRequestDto : ColumnCommitRequestDto
    {
        /// <summary>
        /// New Parameter orders in the
        /// <br/>RepositoryView.
        /// <br/>Order is based on the index of the item in the array
        /// <br/>            
        /// </summary>
        [Newtonsoft.Json.JsonProperty("parametersOrder", Required = Newtonsoft.Json.Required.Always)]
        public System.Collections.ObjectModel.ObservableCollection<System.Guid> ParametersOrder { get; set; } = new System.Collections.ObjectModel.ObservableCollection<System.Guid>();

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static ReOrderColumnCommitRequestDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<ReOrderColumnCommitRequestDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    /// <summary>
    /// AddColumnsBatchCommitResponseDto contains a List`1 of
    /// <br/>AddColumnBatchCommitResponseDto
    /// <br/>            
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class AddColumnsBatchCommitResponseDto : BatchCommitResponseDto
    {

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static AddColumnsBatchCommitResponseDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<AddColumnsBatchCommitResponseDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class BatchCommitResponseDto
    {

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static BatchCommitResponseDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<BatchCommitResponseDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    /// <summary>
    /// AddColumnsBatchCommitRequestDto represents a payload to add a set of
    /// <br/>Parameter to a
    /// <br/>Repository and set
    /// <br/>Value to all
    /// <br/>Entity of the
    /// <br/>Repository
    /// <br/>            
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class AddColumnsBatchCommitRequestDto : BatchCommitRequestDto
    {
        [Newtonsoft.Json.JsonProperty("repositoryViewId", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid RepositoryViewId { get; set; }

        [Newtonsoft.Json.JsonProperty("subRequests", Required = Newtonsoft.Json.Required.Always)]
        public System.Collections.ObjectModel.ObservableCollection<AddColumnsBatchCommitSubRequestDto> SubRequests { get; set; } = new System.Collections.ObjectModel.ObservableCollection<AddColumnsBatchCommitSubRequestDto>();

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static AddColumnsBatchCommitRequestDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<AddColumnsBatchCommitRequestDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class AddColumnsBatchCommitSubRequestDto
    {
        [Newtonsoft.Json.JsonProperty("name", Required = Newtonsoft.Json.Required.Always)]
        public string Name { get; set; }

        [Newtonsoft.Json.JsonProperty("parameterDataType", Required = Newtonsoft.Json.Required.Always)]
        public string ParameterDataType { get; set; }

        [Newtonsoft.Json.JsonProperty("parameterKind", Required = Newtonsoft.Json.Required.Always)]
        public string ParameterKind { get; set; }

        [Newtonsoft.Json.JsonProperty("parameterId", Required = Newtonsoft.Json.Required.Always)]
        public string ParameterId { get; set; }

        [Newtonsoft.Json.JsonProperty("onflyPropertyGuid", Required = Newtonsoft.Json.Required.Always)]
        public System.Guid OnflyPropertyGuid { get; set; }

        [Newtonsoft.Json.JsonProperty("value", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Value { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static AddColumnsBatchCommitSubRequestDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<AddColumnsBatchCommitSubRequestDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class BatchCommitRequestDto : BaseRequestDto
    {

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static BatchCommitRequestDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<BatchCommitRequestDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class DeleteColumnsBatchCommitResponseDto : BatchCommitResponseDto
    {

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static DeleteColumnsBatchCommitResponseDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<DeleteColumnsBatchCommitResponseDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class DeleteColumnsBatchCommitRequestDto : BatchCommitRequestDto
    {
        [Newtonsoft.Json.JsonProperty("repositoryViewId", Required = Newtonsoft.Json.Required.Always)]
        public System.Guid RepositoryViewId { get; set; }

        [Newtonsoft.Json.JsonProperty("parametersIds", Required = Newtonsoft.Json.Required.Always)]
        public System.Collections.ObjectModel.ObservableCollection<System.Guid> ParametersIds { get; set; } = new System.Collections.ObjectModel.ObservableCollection<System.Guid>();

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static DeleteColumnsBatchCommitRequestDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<DeleteColumnsBatchCommitRequestDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    /// <summary>
    /// AddColumnBatchCommitResponseDto returns AffectedEntities and new
    /// <br/>ParameterId
    /// <br/>            
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class AddColumnBatchCommitResponseDto : BatchCommitResponseDto
    {
        /// <summary>
        /// The Id of the newly created Parameter
        /// <br/>            
        /// </summary>
        [Newtonsoft.Json.JsonProperty("parameterId", Required = Newtonsoft.Json.Required.Always)]
        public System.Guid ParameterId { get; set; }

        /// <summary>
        /// Number of Entities affected
        /// <br/>            
        /// </summary>
        [Newtonsoft.Json.JsonProperty("affectedEntities", Required = Newtonsoft.Json.Required.Always)]
        public int AffectedEntities { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static AddColumnBatchCommitResponseDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<AddColumnBatchCommitResponseDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    /// <summary>
    /// AddColumnBatchCommitRequestDto represents a payload to add a
    /// <br/>Parameter to a
    /// <br/>Repository and set
    /// <br/>Value to all
    /// <br/>Entity of the
    /// <br/>Repository
    /// <br/>            
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class AddColumnBatchCommitRequestDto : BatchCommitRequestDto
    {
        /// <summary>
        /// Name of the new Parameter to add
        /// <br/>            
        /// </summary>
        [Newtonsoft.Json.JsonProperty("name", Required = Newtonsoft.Json.Required.Always)]
        public string Name { get; set; }

        /// <summary>
        /// Data Type of the new Parameter to add
        /// <br/>            
        /// </summary>
        [Newtonsoft.Json.JsonProperty("parameterDataType", Required = Newtonsoft.Json.Required.Always)]
        public string ParameterDataType { get; set; }

        /// <summary>
        /// Parameter Kind of the new Parameter to add
        /// <br/>            
        /// </summary>
        [Newtonsoft.Json.JsonProperty("parameterKind", Required = Newtonsoft.Json.Required.Always)]
        public string ParameterKind { get; set; }

        [Newtonsoft.Json.JsonProperty("parameterId", Required = Newtonsoft.Json.Required.Always)]
        public string ParameterId { get; set; }

        /// <summary>
        /// RepositoryView to which will be added this
        /// <br/>Parameter
        /// <br/>            
        /// </summary>
        [Newtonsoft.Json.JsonProperty("repositoryViewId", Required = Newtonsoft.Json.Required.Always)]
        public System.Guid RepositoryViewId { get; set; }

        /// <summary>
        /// Value assigned to all affectable Entity of the
        /// <br/>Repository
        /// <br/>            
        /// </summary>
        [Newtonsoft.Json.JsonProperty("value", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Value { get; set; }

        /// <summary>
        /// Onfly Property Guid for this Parameter
        /// <br/>            
        /// </summary>
        [Newtonsoft.Json.JsonProperty("onflyPropertyGuid", Required = Newtonsoft.Json.Required.Always)]
        public System.Guid OnflyPropertyGuid { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static AddColumnBatchCommitRequestDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<AddColumnBatchCommitRequestDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class DeleteColumnBatchCommitResponseDto : BatchCommitResponseDto
    {
        [Newtonsoft.Json.JsonProperty("deletedParameterId", Required = Newtonsoft.Json.Required.Always)]
        public System.Guid DeletedParameterId { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static DeleteColumnBatchCommitResponseDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<DeleteColumnBatchCommitResponseDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class DeleteColumnBatchCommitRequestDto : BatchCommitRequestDto
    {
        [Newtonsoft.Json.JsonProperty("parameterId", Required = Newtonsoft.Json.Required.Always)]
        public System.Guid ParameterId { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static DeleteColumnBatchCommitRequestDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<DeleteColumnBatchCommitRequestDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class UpdateColumnBatchCommitResponseDto : BatchCommitResponseDto
    {

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static UpdateColumnBatchCommitResponseDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<UpdateColumnBatchCommitResponseDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    /// <summary>
    /// Request message to update a column and entities values in batch
    /// <br/>            
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class UpdateColumnBatchCommitRequestDto : BatchCommitRequestDto
    {
        /// <summary>
        /// List of Guids of Entities to update Value using NewValue
        /// <br/>            
        /// </summary>
        [Newtonsoft.Json.JsonProperty("linesGuids", Required = Newtonsoft.Json.Required.Always)]
        public System.Collections.ObjectModel.ObservableCollection<System.Guid> LinesGuids { get; set; } = new System.Collections.ObjectModel.ObservableCollection<System.Guid>();

        /// <summary>
        /// New value for entities
        /// <br/>            
        /// </summary>
        [Newtonsoft.Json.JsonProperty("newValue", Required = Newtonsoft.Json.Required.Always)]
        public string NewValue { get; set; }

        /// <summary>
        /// Parameter Id for Value x Entity
        /// <br/>            
        /// </summary>
        [Newtonsoft.Json.JsonProperty("parameterId", Required = Newtonsoft.Json.Required.Always)]
        public System.Guid ParameterId { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static UpdateColumnBatchCommitRequestDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<UpdateColumnBatchCommitRequestDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class AddLinesBatchCommitResponseDto : BatchCommitResponseDto
    {

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static AddLinesBatchCommitResponseDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<AddLinesBatchCommitResponseDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class AddLinesBatchCommitRequestDto : BatchCommitRequestDto
    {
        [Newtonsoft.Json.JsonProperty("entities", Required = Newtonsoft.Json.Required.Always)]
        public System.Collections.ObjectModel.ObservableCollection<NewEntityDto> Entities { get; set; } = new System.Collections.ObjectModel.ObservableCollection<NewEntityDto>();

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static AddLinesBatchCommitRequestDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<AddLinesBatchCommitRequestDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class UpdateLinesBatchCommitResponseDto : BatchCommitResponseDto
    {

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static UpdateLinesBatchCommitResponseDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<UpdateLinesBatchCommitResponseDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class UpdateLinesBatchCommitRequestDto : BatchCommitRequestDto
    {
        [Newtonsoft.Json.JsonProperty("cellsUpdates", Required = Newtonsoft.Json.Required.Always)]
        public System.Collections.ObjectModel.ObservableCollection<CellValueDto> CellsUpdates { get; set; } = new System.Collections.ObjectModel.ObservableCollection<CellValueDto>();

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static UpdateLinesBatchCommitRequestDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<UpdateLinesBatchCommitRequestDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PutTableBatchCommitResponseDto : BatchCommitResponseDto
    {
        [Newtonsoft.Json.JsonProperty("status", Required = Newtonsoft.Json.Required.Always)]
        public string Status { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static PutTableBatchCommitResponseDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<PutTableBatchCommitResponseDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ExternalPutTableBatchCommitRequestDto
    {
        [Newtonsoft.Json.JsonProperty("entities", Required = Newtonsoft.Json.Required.Always)]
        public System.Collections.ObjectModel.ObservableCollection<EntityDto> Entities { get; set; } = new System.Collections.ObjectModel.ObservableCollection<EntityDto>();

        [Newtonsoft.Json.JsonProperty("parameters", Required = Newtonsoft.Json.Required.Always)]
        public System.Collections.ObjectModel.ObservableCollection<ParameterDto> Parameters { get; set; } = new System.Collections.ObjectModel.ObservableCollection<ParameterDto>();

        [Newtonsoft.Json.JsonProperty("values", Required = Newtonsoft.Json.Required.Always)]
        public System.Collections.ObjectModel.ObservableCollection<string> Values { get; set; } = new System.Collections.ObjectModel.ObservableCollection<string>();

        [Newtonsoft.Json.JsonProperty("schemaVersion", Required = Newtonsoft.Json.Required.Always)]
        public string SchemaVersion { get; set; }

        [Newtonsoft.Json.JsonProperty("documentSourceName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string DocumentSourceName { get; set; }

        [Newtonsoft.Json.JsonProperty("projectSourceId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ProjectSourceId { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static ExternalPutTableBatchCommitRequestDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<ExternalPutTableBatchCommitRequestDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class EntityDto
    {
        [Newtonsoft.Json.JsonProperty("values", Required = Newtonsoft.Json.Required.Always)]
        public System.Collections.ObjectModel.ObservableCollection<EntityValueDto> Values { get; set; } = new System.Collections.ObjectModel.ObservableCollection<EntityValueDto>();

        [Newtonsoft.Json.JsonProperty("entityName", Required = Newtonsoft.Json.Required.Always)]
        public string EntityName { get; set; }

        [Newtonsoft.Json.JsonProperty("entityCadId", Required = Newtonsoft.Json.Required.Always)]
        public string EntityCadId { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static EntityDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<EntityDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class EntityValueDto
    {
        [Newtonsoft.Json.JsonProperty("parameterIndex", Required = Newtonsoft.Json.Required.Always)]
        public int ParameterIndex { get; set; }

        [Newtonsoft.Json.JsonProperty("valueIndex", Required = Newtonsoft.Json.Required.Always)]
        public int ValueIndex { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static EntityValueDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<EntityValueDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ParameterDto
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        public System.Guid Id { get; set; }

        [Newtonsoft.Json.JsonProperty("parameterName", Required = Newtonsoft.Json.Required.Always)]
        public string ParameterName { get; set; }

        [Newtonsoft.Json.JsonProperty("parameterDataType", Required = Newtonsoft.Json.Required.Always)]
        public string ParameterDataType { get; set; }

        [Newtonsoft.Json.JsonProperty("parameterKind", Required = Newtonsoft.Json.Required.Always)]
        public string ParameterKind { get; set; }

        [Newtonsoft.Json.JsonProperty("parameterId", Required = Newtonsoft.Json.Required.Always)]
        public string ParameterId { get; set; }

        [Newtonsoft.Json.JsonProperty("parameterNature", Required = Newtonsoft.Json.Required.Always)]
        public ParameterNatureEnum ParameterNature { get; set; }

        [Newtonsoft.Json.JsonProperty("onflyPropertyGuid", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? OnflyPropertyGuid { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static ParameterDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<ParameterDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    /// <summary>
    /// ParameterNatureEnum can be of two values
    /// <br/>
    /// <br/>    
    /// <br/>        
    /// <br/>        
    /// <br/>    
    /// <br/>    
    /// <br/>        0
    /// <br/>        Type
    /// <br/>    
    /// <br/>    
    /// <br/>        1
    /// <br/>        Instance
    /// <br/>    
    /// <br/>
    /// <br/>            
    /// <br/>
    /// <br/>0 = Type
    /// <br/>1 = Instance
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum ParameterNatureEnum
    {

        Type = 0,

        Instance = 1,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PostAutomationActionResponseDto
    {
        [Newtonsoft.Json.JsonProperty("automationActionId", Required = Newtonsoft.Json.Required.Always)]
        public System.Guid AutomationActionId { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static PostAutomationActionResponseDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<PostAutomationActionResponseDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PostAutomationActionRequestDto
    {
        [Newtonsoft.Json.JsonProperty("automationId", Required = Newtonsoft.Json.Required.Always)]
        public System.Guid AutomationId { get; set; }

        [Newtonsoft.Json.JsonProperty("type", Required = Newtonsoft.Json.Required.Always)]
        public AutomationActionTypeEnum Type { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static PostAutomationActionRequestDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<PostAutomationActionRequestDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    /// <summary>
    /// 0 = PopulatorSet
    /// <br/>1 = ValidatorSet
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum AutomationActionTypeEnum
    {

        PopulatorSet = 0,

        ValidatorSet = 1,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class DeleteAutomationActionResponseDto
    {

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static DeleteAutomationActionResponseDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<DeleteAutomationActionResponseDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PatchAutomationActionPopulatorSetParameterIdResponseDto
    {

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static PatchAutomationActionPopulatorSetParameterIdResponseDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<PatchAutomationActionPopulatorSetParameterIdResponseDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PostAutomationActionPopulatorSetPopulatorResponseDto
    {
        /// <summary>
        /// Created id
        /// <br/>            
        /// </summary>
        [Newtonsoft.Json.JsonProperty("automationActionPopulatorId", Required = Newtonsoft.Json.Required.Always)]
        public System.Guid AutomationActionPopulatorId { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static PostAutomationActionPopulatorSetPopulatorResponseDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<PostAutomationActionPopulatorSetPopulatorResponseDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PostAutomationActionPopulatorSetPopulatorRequestDto
    {
        [Newtonsoft.Json.JsonProperty("automationActionId", Required = Newtonsoft.Json.Required.Always)]
        public System.Guid AutomationActionId { get; set; }

        [Newtonsoft.Json.JsonProperty("type", Required = Newtonsoft.Json.Required.Always)]
        public AutomationActionPopulatorTypeEnum Type { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static PostAutomationActionPopulatorSetPopulatorRequestDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<PostAutomationActionPopulatorSetPopulatorRequestDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    /// <summary>
    /// 0 = Value
    /// <br/>1 = Entity
    /// <br/>2 = Parameter
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum AutomationActionPopulatorTypeEnum
    {

        Value = 0,

        Entity = 1,

        Parameter = 2,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PatchAutomationActionPopulatorSetPopulatorFormulaResponseDto
    {

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static PatchAutomationActionPopulatorSetPopulatorFormulaResponseDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<PatchAutomationActionPopulatorSetPopulatorFormulaResponseDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PatchAutomationActionPopulatorSetPopulatorFormulaRequestDto : AbstractAutomationActionPopulatorSetPopulatorRequestDto
    {
        [Newtonsoft.Json.JsonProperty("automationActionPopulatorId", Required = Newtonsoft.Json.Required.Always)]
        public System.Guid AutomationActionPopulatorId { get; set; }

        [Newtonsoft.Json.JsonProperty("type", Required = Newtonsoft.Json.Required.Always)]
        public AutomationActionPopulatorTypeEnum Type { get; set; }

        [Newtonsoft.Json.JsonProperty("formula", Required = Newtonsoft.Json.Required.Always)]
        public string Formula { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static PatchAutomationActionPopulatorSetPopulatorFormulaRequestDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<PatchAutomationActionPopulatorSetPopulatorFormulaRequestDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public abstract partial class AbstractAutomationActionPopulatorSetPopulatorRequestDto
    {

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static AbstractAutomationActionPopulatorSetPopulatorRequestDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<AbstractAutomationActionPopulatorSetPopulatorRequestDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PatchAutomationActionPopulatorSetPopulatorValueResponseDto
    {

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static PatchAutomationActionPopulatorSetPopulatorValueResponseDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<PatchAutomationActionPopulatorSetPopulatorValueResponseDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PatchAutomationActionPopulatorSetPopulatorValueRequestDto : AbstractAutomationActionPopulatorSetPopulatorRequestDto
    {
        [Newtonsoft.Json.JsonProperty("automationActionPopulatorId", Required = Newtonsoft.Json.Required.Always)]
        public System.Guid AutomationActionPopulatorId { get; set; }

        [Newtonsoft.Json.JsonProperty("value", Required = Newtonsoft.Json.Required.Always)]
        public string Value { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static PatchAutomationActionPopulatorSetPopulatorValueRequestDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<PatchAutomationActionPopulatorSetPopulatorValueRequestDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PatchAutomationActionPopulatorSetPopulatorEntityResponseDto
    {

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static PatchAutomationActionPopulatorSetPopulatorEntityResponseDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<PatchAutomationActionPopulatorSetPopulatorEntityResponseDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PatchAutomationActionPopulatorSetPopulatorEntityRequestDto : AbstractAutomationActionPopulatorSetPopulatorRequestDto
    {
        [Newtonsoft.Json.JsonProperty("automationActionPopulatorId", Required = Newtonsoft.Json.Required.Always)]
        public System.Guid AutomationActionPopulatorId { get; set; }

        [Newtonsoft.Json.JsonProperty("entityId", Required = Newtonsoft.Json.Required.Always)]
        public System.Guid EntityId { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static PatchAutomationActionPopulatorSetPopulatorEntityRequestDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<PatchAutomationActionPopulatorSetPopulatorEntityRequestDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PatchAutomationActionPopulatorSetPopulatorParameterResponseDto
    {

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static PatchAutomationActionPopulatorSetPopulatorParameterResponseDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<PatchAutomationActionPopulatorSetPopulatorParameterResponseDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PatchAutomationActionPopulatorSetPopulatorParameterRequestDto : AbstractAutomationActionPopulatorSetPopulatorRequestDto
    {
        [Newtonsoft.Json.JsonProperty("parameterId", Required = Newtonsoft.Json.Required.Always)]
        public System.Guid ParameterId { get; set; }

        [Newtonsoft.Json.JsonProperty("automationActionPopulatorId", Required = Newtonsoft.Json.Required.Always)]
        public System.Guid AutomationActionPopulatorId { get; set; }

        [Newtonsoft.Json.JsonProperty("type", Required = Newtonsoft.Json.Required.Always)]
        public AutomationActionPopulatorTypeEnum Type { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static PatchAutomationActionPopulatorSetPopulatorParameterRequestDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<PatchAutomationActionPopulatorSetPopulatorParameterRequestDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PatchAutomationActionPopulatorSetReOrderRequestDto : AbstractAutomationActionPopulatorSetPopulatorRequestDto
    {
        [Newtonsoft.Json.JsonProperty("automationActionPopulatorSetId", Required = Newtonsoft.Json.Required.Always)]
        public System.Guid AutomationActionPopulatorSetId { get; set; }

        [Newtonsoft.Json.JsonProperty("newOrder", Required = Newtonsoft.Json.Required.Always)]
        public System.Collections.ObjectModel.ObservableCollection<System.Guid> NewOrder { get; set; } = new System.Collections.ObjectModel.ObservableCollection<System.Guid>();

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static PatchAutomationActionPopulatorSetReOrderRequestDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<PatchAutomationActionPopulatorSetReOrderRequestDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PostAutomationValidatorSetItemResponseDto
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        public System.Guid Id { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static PostAutomationValidatorSetItemResponseDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<PostAutomationValidatorSetItemResponseDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ReOrderValidatorSetItemsRequestDto
    {
        [Newtonsoft.Json.JsonProperty("newOrder", Required = Newtonsoft.Json.Required.Always)]
        public System.Collections.ObjectModel.ObservableCollection<System.Guid> NewOrder { get; set; } = new System.Collections.ObjectModel.ObservableCollection<System.Guid>();

        [Newtonsoft.Json.JsonProperty("automationActionValidatorSetId", Required = Newtonsoft.Json.Required.Always)]
        public System.Guid AutomationActionValidatorSetId { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static ReOrderValidatorSetItemsRequestDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<ReOrderValidatorSetItemsRequestDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    /// <summary>
    /// 0 = Contains
    /// <br/>1 = NotContains
    /// <br/>2 = Equals
    /// <br/>3 = NotEquals
    /// <br/>4 = Exists
    /// <br/>5 = NotExists
    /// <br/>6 = GreaterThan
    /// <br/>7 = LesserThan
    /// <br/>8 = MatchesRegExp
    /// <br/>9 = NotMatchesRegExp
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum AutomationActionValidatorItemOperatorEnum
    {

        Contains = 0,

        NotContains = 1,

        Equals = 2,

        NotEquals = 3,

        Exists = 4,

        NotExists = 5,

        GreaterThan = 6,

        LesserThan = 7,

        MatchesRegExp = 8,

        NotMatchesRegExp = 9,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PostAutomationConditionResponseDto
    {
        [Newtonsoft.Json.JsonProperty("automationConditionId", Required = Newtonsoft.Json.Required.Always)]
        public System.Guid AutomationConditionId { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static PostAutomationConditionResponseDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<PostAutomationConditionResponseDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class DeleteAutomationConditionResponseDto
    {

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static DeleteAutomationConditionResponseDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<DeleteAutomationConditionResponseDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PatchAutomationConditionOperatorResponseDto
    {

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static PatchAutomationConditionOperatorResponseDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<PatchAutomationConditionOperatorResponseDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    /// <summary>
    /// 0 = Contains
    /// <br/>1 = NotContains
    /// <br/>2 = Equals
    /// <br/>3 = NotEquals
    /// <br/>4 = Exists
    /// <br/>5 = NotExists
    /// <br/>6 = GreaterThan
    /// <br/>7 = LesserThan
    /// <br/>8 = MatchesRegExp
    /// <br/>9 = NotMatchesRegExp
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum AutomationConditionOperatorEnum
    {

        Contains = 0,

        NotContains = 1,

        Equals = 2,

        NotEquals = 3,

        Exists = 4,

        NotExists = 5,

        GreaterThan = 6,

        LesserThan = 7,

        MatchesRegExp = 8,

        NotMatchesRegExp = 9,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PatchAutomationConditionParameterIdResponseDto
    {

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static PatchAutomationConditionParameterIdResponseDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<PatchAutomationConditionParameterIdResponseDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PatchAutomationConditionValueResponseDto
    {

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static PatchAutomationConditionValueResponseDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<PatchAutomationConditionValueResponseDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ValidateAutomationResponseDto
    {
        [Newtonsoft.Json.JsonProperty("errors", Required = Newtonsoft.Json.Required.Always)]
        public AutomationValidationError Errors { get; set; } = new AutomationValidationError();

        [Newtonsoft.Json.JsonProperty("onError", Required = Newtonsoft.Json.Required.Always)]
        public bool OnError { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static ValidateAutomationResponseDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<ValidateAutomationResponseDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class AutomationValidationError
    {
        [Newtonsoft.Json.JsonProperty("conditions", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.ObjectModel.ObservableCollection<AutomationConditionValidationError> Conditions { get; set; }

        [Newtonsoft.Json.JsonProperty("actions", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.ObjectModel.ObservableCollection<AutomationActionValidationError> Actions { get; set; }

        [Newtonsoft.Json.JsonProperty("name", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.ObjectModel.ObservableCollection<AutomationPropertyValidationError> Name { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.ObjectModel.ObservableCollection<AutomationPropertyValidationError> Description { get; set; }

        [Newtonsoft.Json.JsonProperty("count", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int Count { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static AutomationValidationError FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<AutomationValidationError>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class AutomationConditionValidationError
    {
        [Newtonsoft.Json.JsonProperty("conditionId", Required = Newtonsoft.Json.Required.Always)]
        public System.Guid ConditionId { get; set; }

        [Newtonsoft.Json.JsonProperty("field", Required = Newtonsoft.Json.Required.Always)]
        public AutomationConditionValidationErrorField Field { get; set; }

        [Newtonsoft.Json.JsonProperty("reason", Required = Newtonsoft.Json.Required.Always)]
        public AutomationConditionValidationErrorReasonEnum Reason { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static AutomationConditionValidationError FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<AutomationConditionValidationError>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    /// <summary>
    /// 0 = Key
    /// <br/>1 = Value
    /// <br/>2 = None
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum AutomationConditionValidationErrorField
    {

        Key = 0,

        Value = 1,

        None = 2,

    }

    /// <summary>
    /// 0 = EmptyOrNull
    /// <br/>1 = NoCondition
    /// <br/>2 = NotParseable
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum AutomationConditionValidationErrorReasonEnum
    {

        EmptyOrNull = 0,

        NoCondition = 1,

        NotParseable = 2,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class AutomationActionValidationError
    {
        [Newtonsoft.Json.JsonProperty("actionId", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid ActionId { get; set; }

        [Newtonsoft.Json.JsonProperty("field", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AutomationActionValidationErrorFieldEnum Field { get; set; }

        [Newtonsoft.Json.JsonProperty("reason", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AutomationActionValidationErrorReasonEnum Reason { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static AutomationActionValidationError FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<AutomationActionValidationError>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    /// <summary>
    /// 0 = ParameterId
    /// <br/>1 = Populators
    /// <br/>2 = Value
    /// <br/>3 = None
    /// <br/>4 = EntityId
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum AutomationActionValidationErrorFieldEnum
    {

        ParameterId = 0,

        Populators = 1,

        Value = 2,

        None = 3,

        EntityId = 4,

    }

    /// <summary>
    /// 0 = EmptyOrNull
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum AutomationActionValidationErrorReasonEnum
    {

        EmptyOrNull = 0,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class AutomationPropertyValidationError
    {
        [Newtonsoft.Json.JsonProperty("field", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AutomationPropertyValidationErrorField Field { get; set; }

        [Newtonsoft.Json.JsonProperty("reason", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AutomationPropertyValidationErrorReasonEnum Reason { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static AutomationPropertyValidationError FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<AutomationPropertyValidationError>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    /// <summary>
    /// 0 = Name
    /// <br/>1 = Description
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum AutomationPropertyValidationErrorField
    {

        Name = 0,

        Description = 1,

    }

    /// <summary>
    /// 0 = EmptyOrNull
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum AutomationPropertyValidationErrorReasonEnum
    {

        EmptyOrNull = 0,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class EditAutomationResponseDto
    {
        [Newtonsoft.Json.JsonProperty("repositoryNotFound", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool RepositoryNotFound { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static EditAutomationResponseDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<EditAutomationResponseDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class EditAutomationRequestDto
    {
        [Newtonsoft.Json.JsonProperty("automationId", Required = Newtonsoft.Json.Required.Always)]
        public System.Guid AutomationId { get; set; }

        [Newtonsoft.Json.JsonProperty("name", Required = Newtonsoft.Json.Required.Always)]
        public string Name { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Always)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("tableId", Required = Newtonsoft.Json.Required.Always)]
        public System.Guid TableId { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static EditAutomationRequestDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<EditAutomationRequestDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PostAutomationResponseDto
    {
        [Newtonsoft.Json.JsonProperty("automationId", Required = Newtonsoft.Json.Required.Always)]
        public System.Guid AutomationId { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static PostAutomationResponseDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<PostAutomationResponseDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    /// <summary>
    /// Represents a payload to post an Automation
    /// <br/>            
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PostAutomationRequestDto
    {
        [Newtonsoft.Json.JsonProperty("name", Required = Newtonsoft.Json.Required.Always)]
        public string Name { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Always)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("spaceId", Required = Newtonsoft.Json.Required.Always)]
        public System.Guid SpaceId { get; set; }

        [Newtonsoft.Json.JsonProperty("tableId", Required = Newtonsoft.Json.Required.Always)]
        public System.Guid TableId { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static PostAutomationRequestDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<PostAutomationRequestDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class DeleteAutomationResponseDto
    {
        [Newtonsoft.Json.JsonProperty("success", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool Success { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static DeleteAutomationResponseDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<DeleteAutomationResponseDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ResetAutomationResponseDto
    {

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static ResetAutomationResponseDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<ResetAutomationResponseDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ListAutomationResponseDto
    {
        [Newtonsoft.Json.JsonProperty("automations", Required = Newtonsoft.Json.Required.Always)]
        public System.Collections.ObjectModel.ObservableCollection<ListAutomationAutomationResponseDto> Automations { get; set; } = new System.Collections.ObjectModel.ObservableCollection<ListAutomationAutomationResponseDto>();

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static ListAutomationResponseDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<ListAutomationResponseDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ListAutomationAutomationResponseDto
    {
        [Newtonsoft.Json.JsonProperty("spaceId", Required = Newtonsoft.Json.Required.Always)]
        public System.Guid SpaceId { get; set; }

        [Newtonsoft.Json.JsonProperty("repositoryId", Required = Newtonsoft.Json.Required.Always)]
        public System.Guid RepositoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("name", Required = Newtonsoft.Json.Required.Always)]
        public string Name { get; set; }

        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        public System.Guid Id { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Always)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("conditionStrategy", Required = Newtonsoft.Json.Required.Always)]
        public AutomationConditionStrategyEnum ConditionStrategy { get; set; }

        [Newtonsoft.Json.JsonProperty("lastAutomationExecutionId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? LastAutomationExecutionId { get; set; }

        [Newtonsoft.Json.JsonProperty("lastAutomationExecutionSetStatus", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AutomationExecutionSetStatusViewModelEnum? LastAutomationExecutionSetStatus { get; set; }

        [Newtonsoft.Json.JsonProperty("lastAutomationExecutionSetId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? LastAutomationExecutionSetId { get; set; }

        [Newtonsoft.Json.JsonProperty("lastAutomationExecutionHasValidationResultSets", Required = Newtonsoft.Json.Required.Always)]
        public bool LastAutomationExecutionHasValidationResultSets { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static ListAutomationAutomationResponseDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<ListAutomationAutomationResponseDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    /// <summary>
    /// 0 = And
    /// <br/>1 = Or
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum AutomationConditionStrategyEnum
    {

        And = 0,

        Or = 1,

    }

    /// <summary>
    /// 0 = None
    /// <br/>1 = Pending
    /// <br/>2 = Cancelling
    /// <br/>3 = CancelRequested
    /// <br/>4 = Cancelled
    /// <br/>5 = Executing
    /// <br/>6 = Executed
    /// <br/>7 = OnError
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum AutomationExecutionSetStatusViewModelEnum
    {

        None = 0,

        Pending = 1,

        Cancelling = 2,

        CancelRequested = 3,

        Cancelled = 4,

        Executing = 5,

        Executed = 6,

        OnError = 7,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ViewAutomationResponseDto
    {
        [Newtonsoft.Json.JsonProperty("viewAutomation", Required = Newtonsoft.Json.Required.Always)]
        public ViewAutomationDto ViewAutomation { get; set; } = new ViewAutomationDto();

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static ViewAutomationResponseDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<ViewAutomationResponseDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ViewAutomationDto
    {
        [Newtonsoft.Json.JsonProperty("name", Required = Newtonsoft.Json.Required.Always)]
        public string Name { get; set; }

        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        public System.Guid Id { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Always)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("conditionStrategy", Required = Newtonsoft.Json.Required.Always)]
        public AutomationConditionStrategyEnum ConditionStrategy { get; set; }

        [Newtonsoft.Json.JsonProperty("when", Required = Newtonsoft.Json.Required.Always)]
        public System.Collections.ObjectModel.ObservableCollection<ViewAutomationConditionDto> When { get; set; } = new System.Collections.ObjectModel.ObservableCollection<ViewAutomationConditionDto>();

        [Newtonsoft.Json.JsonProperty("then", Required = Newtonsoft.Json.Required.Always)]
        public System.Collections.ObjectModel.ObservableCollection<ViewAutomationActionDto> Then { get; set; } = new System.Collections.ObjectModel.ObservableCollection<ViewAutomationActionDto>();

        [Newtonsoft.Json.JsonProperty("spaceId", Required = Newtonsoft.Json.Required.Always)]
        public System.Guid SpaceId { get; set; }

        [Newtonsoft.Json.JsonProperty("repositoryId", Required = Newtonsoft.Json.Required.Always)]
        public System.Guid RepositoryId { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static ViewAutomationDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<ViewAutomationDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ViewAutomationConditionDto
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Id { get; set; }

        [Newtonsoft.Json.JsonProperty("order", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int Order { get; set; }

        [Newtonsoft.Json.JsonProperty("parameterId", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid ParameterId { get; set; }

        [Newtonsoft.Json.JsonProperty("operator", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AutomationConditionOperatorEnum Operator { get; set; }

        [Newtonsoft.Json.JsonProperty("value", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Value { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static ViewAutomationConditionDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<ViewAutomationConditionDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ViewAutomationActionDto
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Id { get; set; }

        [Newtonsoft.Json.JsonProperty("type", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AutomationActionTypeEnum Type { get; set; }

        [Newtonsoft.Json.JsonProperty("order", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int Order { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static ViewAutomationActionDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<ViewAutomationActionDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ViewAutomationActionPopulatorSetDto : ViewAutomationActionDto
    {
        [Newtonsoft.Json.JsonProperty("targetParameterId", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid TargetParameterId { get; set; }

        [Newtonsoft.Json.JsonProperty("populators", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.ObjectModel.ObservableCollection<ViewAutomationActionPopulatorSetPopulatorDto> Populators { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static ViewAutomationActionPopulatorSetDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<ViewAutomationActionPopulatorSetDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public abstract partial class ViewAutomationActionPopulatorSetPopulatorDto
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Id { get; set; }

        [Newtonsoft.Json.JsonProperty("type", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AutomationActionPopulatorTypeEnum Type { get; set; }

        [Newtonsoft.Json.JsonProperty("order", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int Order { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static ViewAutomationActionPopulatorSetPopulatorDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<ViewAutomationActionPopulatorSetPopulatorDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ViewAutomationActionPopulatorSetPopulatorEntityDto : ViewAutomationActionPopulatorSetPopulatorDto
    {
        [Newtonsoft.Json.JsonProperty("entityId", Required = Newtonsoft.Json.Required.Always)]
        public System.Guid EntityId { get; set; }

        [Newtonsoft.Json.JsonProperty("entityName", Required = Newtonsoft.Json.Required.Always)]
        public string EntityName { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static ViewAutomationActionPopulatorSetPopulatorEntityDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<ViewAutomationActionPopulatorSetPopulatorEntityDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ViewAutomationActionPopulatorSetPopulatorParameterDto : ViewAutomationActionPopulatorSetPopulatorDto
    {
        [Newtonsoft.Json.JsonProperty("parameterId", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid ParameterId { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static ViewAutomationActionPopulatorSetPopulatorParameterDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<ViewAutomationActionPopulatorSetPopulatorParameterDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ViewAutomationActionPopulatorSetPopulatorValueDto : ViewAutomationActionPopulatorSetPopulatorDto
    {
        [Newtonsoft.Json.JsonProperty("value", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Value { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static ViewAutomationActionPopulatorSetPopulatorValueDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<ViewAutomationActionPopulatorSetPopulatorValueDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ViewAutomationActionValidatorSetDto : ViewAutomationActionDto
    {
        [Newtonsoft.Json.JsonProperty("validators", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.ObjectModel.ObservableCollection<ViewAutomationActionValidatorBaseDto> Validators { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static ViewAutomationActionValidatorSetDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<ViewAutomationActionValidatorSetDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public abstract partial class ViewAutomationActionValidatorBaseDto
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        public System.Guid Id { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static ViewAutomationActionValidatorBaseDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<ViewAutomationActionValidatorBaseDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ViewAutomationActionValidatorItemDto : ViewAutomationActionValidatorBaseDto
    {
        [Newtonsoft.Json.JsonProperty("operator", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AutomationActionValidatorItemOperatorEnum Operator { get; set; }

        [Newtonsoft.Json.JsonProperty("parameterId", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid ParameterId { get; set; }

        [Newtonsoft.Json.JsonProperty("value", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Value { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static ViewAutomationActionValidatorItemDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<ViewAutomationActionValidatorItemDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class StartTableAutomationResponseDto
    {
        [Newtonsoft.Json.JsonProperty("automationExecutionSetId", Required = Newtonsoft.Json.Required.Always)]
        public System.Guid AutomationExecutionSetId { get; set; }

        [Newtonsoft.Json.JsonProperty("validationErrors", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.Dictionary<string, AutomationValidationError> ValidationErrors { get; set; }

        [Newtonsoft.Json.JsonProperty("inexistingAutomations", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.ObjectModel.ObservableCollection<System.Guid> InexistingAutomations { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static StartTableAutomationResponseDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<StartTableAutomationResponseDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class CancelAutomationExecutionResponseDto
    {
        [Newtonsoft.Json.JsonProperty("status", Required = Newtonsoft.Json.Required.Always)]
        public AutomationExecutionStatusEnum Status { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static CancelAutomationExecutionResponseDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<CancelAutomationExecutionResponseDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    /// <summary>
    /// 0 = Pending
    /// <br/>1 = Cancelling
    /// <br/>2 = CancelRequested
    /// <br/>3 = Cancelled
    /// <br/>4 = Executing
    /// <br/>5 = Executed
    /// <br/>6 = OnError
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum AutomationExecutionStatusEnum
    {

        Pending = 0,

        Cancelling = 1,

        CancelRequested = 2,

        Cancelled = 3,

        Executing = 4,

        Executed = 5,

        OnError = 6,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ReOrderAutomationActionsResponseDto
    {

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static ReOrderAutomationActionsResponseDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<ReOrderAutomationActionsResponseDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ReOrderAutomationActionsRequestDto
    {
        [Newtonsoft.Json.JsonProperty("automationId", Required = Newtonsoft.Json.Required.Always)]
        public System.Guid AutomationId { get; set; }

        [Newtonsoft.Json.JsonProperty("newOrder", Required = Newtonsoft.Json.Required.Always)]
        public System.Collections.ObjectModel.ObservableCollection<System.Guid> NewOrder { get; set; } = new System.Collections.ObjectModel.ObservableCollection<System.Guid>();

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static ReOrderAutomationActionsRequestDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<ReOrderAutomationActionsRequestDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ReOrderAutomationConditionsResponseDto
    {

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static ReOrderAutomationConditionsResponseDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<ReOrderAutomationConditionsResponseDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ReOrderAutomationConditionsRequestDto
    {
        [Newtonsoft.Json.JsonProperty("automationId", Required = Newtonsoft.Json.Required.Always)]
        public System.Guid AutomationId { get; set; }

        [Newtonsoft.Json.JsonProperty("newOrder", Required = Newtonsoft.Json.Required.Always)]
        public System.Collections.ObjectModel.ObservableCollection<System.Guid> NewOrder { get; set; } = new System.Collections.ObjectModel.ObservableCollection<System.Guid>();

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static ReOrderAutomationConditionsRequestDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<ReOrderAutomationConditionsRequestDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class StartAllSpaceAutomationsRequestDto
    {
        [Newtonsoft.Json.JsonProperty("spaceId", Required = Newtonsoft.Json.Required.Always)]
        public System.Guid SpaceId { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static StartAllSpaceAutomationsRequestDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<StartAllSpaceAutomationsRequestDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PatchAutomationConditionStrategyResponseDto
    {

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static PatchAutomationConditionStrategyResponseDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<PatchAutomationConditionStrategyResponseDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PatchAutomationConditionStrategyRequestDto
    {
        [Newtonsoft.Json.JsonProperty("automationId", Required = Newtonsoft.Json.Required.Always)]
        public System.Guid AutomationId { get; set; }

        [Newtonsoft.Json.JsonProperty("condition", Required = Newtonsoft.Json.Required.Always)]
        public AutomationConditionStrategyEnum Condition { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static PatchAutomationConditionStrategyRequestDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<PatchAutomationConditionStrategyRequestDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ListAutomationExecutionResponseDto
    {
        [Newtonsoft.Json.JsonProperty("automationExecutions", Required = Newtonsoft.Json.Required.Always)]
        public System.Collections.ObjectModel.ObservableCollection<AutomationExecutionListView> AutomationExecutions { get; set; } = new System.Collections.ObjectModel.ObservableCollection<AutomationExecutionListView>();

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static ListAutomationExecutionResponseDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<ListAutomationExecutionResponseDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class AutomationExecutionListView
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Id { get; set; }

        [Newtonsoft.Json.JsonProperty("name", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Name { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("startedAt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTime StartedAt { get; set; }

        [Newtonsoft.Json.JsonProperty("endedAt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTime EndedAt { get; set; }

        [Newtonsoft.Json.JsonProperty("status", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AutomationExecutionStatusEnum Status { get; set; }

        [Newtonsoft.Json.JsonProperty("createdBy", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid CreatedBy { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static AutomationExecutionListView FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<AutomationExecutionListView>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class AutomationExecutionView
    {
        [Newtonsoft.Json.JsonProperty("automationName", Required = Newtonsoft.Json.Required.Always)]
        public string AutomationName { get; set; }

        [Newtonsoft.Json.JsonProperty("automationExecutionId", Required = Newtonsoft.Json.Required.Always)]
        public System.Guid AutomationExecutionId { get; set; }

        [Newtonsoft.Json.JsonProperty("startedAt", Required = Newtonsoft.Json.Required.Always)]
        public System.DateTime StartedAt { get; set; }

        [Newtonsoft.Json.JsonProperty("endedAt", Required = Newtonsoft.Json.Required.Always)]
        public System.DateTime EndedAt { get; set; }

        [Newtonsoft.Json.JsonProperty("statuses", Required = Newtonsoft.Json.Required.Always)]
        public System.Collections.ObjectModel.ObservableCollection<AutomationExecutionStatusView> Statuses { get; set; } = new System.Collections.ObjectModel.ObservableCollection<AutomationExecutionStatusView>();

        [Newtonsoft.Json.JsonProperty("resultSets", Required = Newtonsoft.Json.Required.Always)]
        public System.Collections.ObjectModel.ObservableCollection<AutomationExecutionValidationResultSetView> ResultSets { get; set; } = new System.Collections.ObjectModel.ObservableCollection<AutomationExecutionValidationResultSetView>();

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static AutomationExecutionView FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<AutomationExecutionView>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class AutomationExecutionStatusView
    {
        [Newtonsoft.Json.JsonProperty("startedAt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTime StartedAt { get; set; }

        [Newtonsoft.Json.JsonProperty("endedAt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTime EndedAt { get; set; }

        [Newtonsoft.Json.JsonProperty("status", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AutomationExecutionStatusEnum Status { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static AutomationExecutionStatusView FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<AutomationExecutionStatusView>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class AutomationExecutionValidationResultSetView
    {
        [Newtonsoft.Json.JsonProperty("items", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.ObjectModel.ObservableCollection<AutomationExecutionValidationResultItemView> Items { get; set; }

        [Newtonsoft.Json.JsonProperty("nbMissed", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int NbMissed { get; set; }

        [Newtonsoft.Json.JsonProperty("nbPassed", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int NbPassed { get; set; }

        [Newtonsoft.Json.JsonProperty("nbFailed", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int NbFailed { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static AutomationExecutionValidationResultSetView FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<AutomationExecutionValidationResultSetView>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class AutomationExecutionValidationResultItemView
    {
        [Newtonsoft.Json.JsonProperty("missed", Required = Newtonsoft.Json.Required.Always)]
        public bool Missed { get; set; }

        [Newtonsoft.Json.JsonProperty("failed", Required = Newtonsoft.Json.Required.Always)]
        public bool Failed { get; set; }

        [Newtonsoft.Json.JsonProperty("passed", Required = Newtonsoft.Json.Required.Always)]
        public bool Passed { get; set; }

        [Newtonsoft.Json.JsonProperty("entityId", Required = Newtonsoft.Json.Required.Always)]
        public System.Guid EntityId { get; set; }

        [Newtonsoft.Json.JsonProperty("parameterId", Required = Newtonsoft.Json.Required.Always)]
        public System.Guid ParameterId { get; set; }

        [Newtonsoft.Json.JsonProperty("validatorSetId", Required = Newtonsoft.Json.Required.Always)]
        public System.Guid ValidatorSetId { get; set; }

        [Newtonsoft.Json.JsonProperty("validatorItemId", Required = Newtonsoft.Json.Required.Always)]
        public System.Guid ValidatorItemId { get; set; }

        [Newtonsoft.Json.JsonProperty("parameterName", Required = Newtonsoft.Json.Required.Always)]
        public string ParameterName { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static AutomationExecutionValidationResultItemView FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<AutomationExecutionValidationResultItemView>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class FilterAutomationActionValidatorItemResultsResponseDto
    {
        [Newtonsoft.Json.JsonProperty("items", Required = Newtonsoft.Json.Required.Always)]
        public System.Collections.ObjectModel.ObservableCollection<AutomationExecutionValidationResultItemView> Items { get; set; } = new System.Collections.ObjectModel.ObservableCollection<AutomationExecutionValidationResultItemView>();

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static FilterAutomationActionValidatorItemResultsResponseDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<FilterAutomationActionValidatorItemResultsResponseDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class FilterAutomationActionValidatorItemResultsRequestDto
    {
        [Newtonsoft.Json.JsonProperty("automationExecutionId", Required = Newtonsoft.Json.Required.Always)]
        public System.Guid AutomationExecutionId { get; set; }

        [Newtonsoft.Json.JsonProperty("filters", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ResultSetsFiltersDto Filters { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static FilterAutomationActionValidatorItemResultsRequestDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<FilterAutomationActionValidatorItemResultsRequestDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ResultSetsFiltersDto
    {
        [Newtonsoft.Json.JsonProperty("filters", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.ObjectModel.ObservableCollection<ResultSetsFilterDto> Filters { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static ResultSetsFiltersDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<ResultSetsFiltersDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ResultSetsFilterDto
    {
        [Newtonsoft.Json.JsonProperty("parameterId", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid ParameterId { get; set; }

        [Newtonsoft.Json.JsonProperty("values", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.ObjectModel.ObservableCollection<string> Values { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static ResultSetsFilterDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<ResultSetsFilterDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class GetAutomationExecutionSetSummaryReportResponseDto
    {
        [Newtonsoft.Json.JsonProperty("automationExecutions", Required = Newtonsoft.Json.Required.Always)]
        public System.Collections.ObjectModel.ObservableCollection<AutomationExecutionView> AutomationExecutions { get; set; } = new System.Collections.ObjectModel.ObservableCollection<AutomationExecutionView>();

        [Newtonsoft.Json.JsonProperty("status", Required = Newtonsoft.Json.Required.Always)]
        public AutomationExecutionSetStatusEnum Status { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static GetAutomationExecutionSetSummaryReportResponseDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<GetAutomationExecutionSetSummaryReportResponseDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    /// <summary>
    /// 0 = Pending
    /// <br/>1 = Cancelling
    /// <br/>2 = CancelRequested
    /// <br/>3 = Cancelled
    /// <br/>4 = Executing
    /// <br/>5 = Executed
    /// <br/>6 = OnError
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum AutomationExecutionSetStatusEnum
    {

        Pending = 0,

        Cancelling = 1,

        CancelRequested = 2,

        Cancelled = 3,

        Executing = 4,

        Executed = 5,

        OnError = 6,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class GetAutomationExecutionSetStatusResponseDto
    {
        [Newtonsoft.Json.JsonProperty("executionStatuses", Required = Newtonsoft.Json.Required.Always)]
        public System.Collections.ObjectModel.ObservableCollection<AutomationExecutionStatusViewModel> ExecutionStatuses { get; set; } = new System.Collections.ObjectModel.ObservableCollection<AutomationExecutionStatusViewModel>();

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static GetAutomationExecutionSetStatusResponseDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<GetAutomationExecutionSetStatusResponseDto>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class AutomationExecutionStatusViewModel
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int Id { get; set; }

        [Newtonsoft.Json.JsonProperty("startedAt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTime StartedAt { get; set; }

        [Newtonsoft.Json.JsonProperty("status", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AutomationExecutionStatusEnum Status { get; set; }

        [Newtonsoft.Json.JsonProperty("endedAt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTime? EndedAt { get; set; }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static AutomationExecutionStatusViewModel FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<AutomationExecutionStatusViewModel>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class FileParameter
    {
        public FileParameter(System.IO.Stream data)
            : this (data, null, null)
        {
        }

        public FileParameter(System.IO.Stream data, string fileName)
            : this (data, fileName, null)
        {
        }

        public FileParameter(System.IO.Stream data, string fileName, string contentType)
        {
            Data = data;
            FileName = fileName;
            ContentType = contentType;
        }

        public System.IO.Stream Data { get; private set; }

        public string FileName { get; private set; }

        public string ContentType { get; private set; }
    }

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class FileResponse : System.IDisposable
    {
        private System.IDisposable _client;
        private System.IDisposable _response;

        public int StatusCode { get; private set; }

        public System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IEnumerable<string>> Headers { get; private set; }

        public System.IO.Stream Stream { get; private set; }

        public bool IsPartial
        {
            get { return StatusCode == 206; }
        }

        public FileResponse(int statusCode, System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IEnumerable<string>> headers, System.IO.Stream stream, System.IDisposable client, System.IDisposable response)
        {
            StatusCode = statusCode;
            Headers = headers;
            Stream = stream;
            _client = client;
            _response = response;
        }

        public void Dispose()
        {
            Stream.Dispose();
            if (_response != null)
                _response.Dispose();
            if (_client != null)
                _client.Dispose();
        }
    }


    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SwaggerException : System.Exception
    {
        public int StatusCode { get; private set; }

        public string Response { get; private set; }

        public System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IEnumerable<string>> Headers { get; private set; }

        public SwaggerException(string message, int statusCode, string response, System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IEnumerable<string>> headers, System.Exception innerException)
            : base(message + "\n\nStatus: " + statusCode + "\nResponse: \n" + ((response == null) ? "(null)" : response.Substring(0, response.Length >= 512 ? 512 : response.Length)), innerException)
        {
            StatusCode = statusCode;
            Response = response;
            Headers = headers;
        }

        public override string ToString()
        {
            return string.Format("HTTP Response: \n\n{0}\n\n{1}", Response, base.ToString());
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SwaggerException<TResult> : SwaggerException
    {
        public TResult Result { get; private set; }

        public SwaggerException(string message, int statusCode, string response, System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IEnumerable<string>> headers, TResult result, System.Exception innerException)
            : base(message, statusCode, response, headers, innerException)
        {
            Result = result;
        }
    }

}

#pragma warning restore  108
#pragma warning restore  114
#pragma warning restore  472
#pragma warning restore  612
#pragma warning restore 1573
#pragma warning restore 1591
#pragma warning restore 8073
#pragma warning restore 3016
#pragma warning restore 8603